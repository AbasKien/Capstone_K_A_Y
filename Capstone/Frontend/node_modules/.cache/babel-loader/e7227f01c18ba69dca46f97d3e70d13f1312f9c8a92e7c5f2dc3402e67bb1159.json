{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport { Bar } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\nexport default {\n  components: {\n    BarChart: Bar\n  },\n  data() {\n    return {\n      chartData: {\n        labels: [],\n        // Product names\n        datasets: [{\n          label: 'Total Sold',\n          data: [],\n          backgroundColor: 'rgba(75, 192, 192, 0.5)',\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 1\n        }]\n      },\n      chartOptions: {\n        responsive: true,\n        plugins: {\n          legend: {\n            display: true,\n            position: 'top'\n          }\n        },\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: 'Products'\n            }\n          },\n          y: {\n            title: {\n              display: true,\n              text: 'Total Sold'\n            },\n            beginAtZero: true\n          }\n        }\n      }\n    };\n  },\n  async mounted() {\n    try {\n      const response = await fetch('http://localhost:5555/products/top-selling-products');\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Fetched top selling products data:', data);\n      if (data && Array.isArray(data.topSellingProducts)) {\n        this.chartData.labels = data.topSellingProducts.map(product => product.product_name);\n        this.chartData.datasets[0].data = data.topSellingProducts.map(product => product.total_sold);\n      } else {\n        console.error(\"Expected topSellingProducts to be an array:\", data);\n        this.chartData.labels = [];\n        this.chartData.datasets[0].data = [];\n      }\n    } catch (error) {\n      console.error('Failed to fetch top selling products data:', error);\n      this.chartData.labels = [];\n      this.chartData.datasets[0].data = [];\n    }\n  }\n};","map":{"version":3,"names":["Bar","Chart","ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","register","components","BarChart","data","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","chartOptions","responsive","plugins","legend","display","position","scales","x","title","text","y","beginAtZero","mounted","response","fetch","ok","Error","status","json","console","log","Array","isArray","topSellingProducts","map","product","product_name","total_sold","error"],"sources":["C:\\laragon\\www\\Abas-Adeva-Final-project-Appdevvv\\project_appdev\\Frontend\\src\\views\\TopSellingProductsChart.vue"],"sourcesContent":["<template>\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h5>Top Selling Products</h5>\n      </div>\n      <div class=\"card-body\">\n        <!-- Render the chart only when chartData is ready -->\n        <BarChart v-if=\"chartData && chartData.labels.length\" :data=\"chartData\" :options=\"chartOptions\" />\n        <p v-else>Loading chart data...</p>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import { Bar } from 'vue-chartjs';\n  import {\n    Chart as ChartJS,\n    Title,\n    Tooltip,\n    Legend,\n    BarElement,\n    CategoryScale,\n    LinearScale,\n  } from 'chart.js';\n  \n  ChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n  \n  export default {\n    components: { BarChart: Bar },\n    data() {\n      return {\n        chartData: {\n          labels: [], // Product names\n          datasets: [{\n            label: 'Total Sold',\n            data: [],\n            backgroundColor: 'rgba(75, 192, 192, 0.5)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1,\n          }],\n        },\n        chartOptions: {\n          responsive: true,\n          plugins: {\n            legend: {\n              display: true,\n              position: 'top',\n            },\n          },\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: 'Products',\n              },\n            },\n            y: {\n              title: {\n                display: true,\n                text: 'Total Sold',\n              },\n              beginAtZero: true,\n            },\n          },\n        },\n      };\n    },\n    async mounted() {\n      try {\n        const response = await fetch('http://localhost:5555/products/top-selling-products');\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('Fetched top selling products data:', data);\n  \n        if (data && Array.isArray(data.topSellingProducts)) {\n          this.chartData.labels = data.topSellingProducts.map(product => product.product_name);\n          this.chartData.datasets[0].data = data.topSellingProducts.map(product => product.total_sold);\n        } else {\n          console.error(\"Expected topSellingProducts to be an array:\", data);\n          this.chartData.labels = [];\n          this.chartData.datasets[0].data = [];\n        }\n      } catch (error) {\n        console.error('Failed to fetch top selling products data:', error);\n        this.chartData.labels = [];\n        this.chartData.datasets[0].data = [];\n      }\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .card {\n    border: none;\n    border-radius: 12px;\n    box-shadow: 0 2px 15px rgba(0, 0, 0, 0.08);\n    transition: all 0.3s ease;\n    margin-bottom: 1.5rem;\n    background: white;\n  }\n\n  .card:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.12);\n  }\n\n  .card-header {\n    background: white;\n    border-bottom: none;\n    padding: 1.5rem;\n    border-radius: 12px 12px 0 0 !important;\n  }\n\n  .card-header h5 {\n    margin: 0;\n    color: #2c3e50;\n    font-weight: 600;\n    font-size: 1.25rem;\n  }\n\n  .card-body {\n    padding: 1.5rem;\n  }\n\n  /* Chart container */\n  .chart-container {\n    position: relative;\n    margin: auto;\n    height: 400px;\n  }\n  </style>"],"mappings":";AAcE,SAASA,GAAE,QAAS,aAAa;AACjC,SACEC,KAAI,IAAKC,OAAO,EAChBC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,UAAU,EACVC,aAAa,EACbC,WAAW,QACN,UAAU;AAEjBN,OAAO,CAACO,QAAQ,CAACN,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAU,EAAEC,aAAa,EAAEC,WAAW,CAAC;AAEhF,eAAe;EACbE,UAAU,EAAE;IAAEC,QAAQ,EAAEX;EAAI,CAAC;EAC7BY,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;QACTC,MAAM,EAAE,EAAE;QAAE;QACZC,QAAQ,EAAE,CAAC;UACTC,KAAK,EAAE,YAAY;UACnBJ,IAAI,EAAE,EAAE;UACRK,eAAe,EAAE,yBAAyB;UAC1CC,WAAW,EAAE,uBAAuB;UACpCC,WAAW,EAAE;QACf,CAAC;MACH,CAAC;MACDC,YAAY,EAAE;QACZC,UAAU,EAAE,IAAI;QAChBC,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,OAAO,EAAE,IAAI;YACbC,QAAQ,EAAE;UACZ;QACF,CAAC;QACDC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,KAAK,EAAE;cACLJ,OAAO,EAAE,IAAI;cACbK,IAAI,EAAE;YACR;UACF,CAAC;UACDC,CAAC,EAAE;YACDF,KAAK,EAAE;cACLJ,OAAO,EAAE,IAAI;cACbK,IAAI,EAAE;YACR,CAAC;YACDE,WAAW,EAAE;UACf;QACF;MACF;IACF,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,qDAAqD,CAAC;MACnF,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC3D;MACA,MAAMzB,IAAG,GAAI,MAAMqB,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAE5B,IAAI,CAAC;MAEvD,IAAIA,IAAG,IAAK6B,KAAK,CAACC,OAAO,CAAC9B,IAAI,CAAC+B,kBAAkB,CAAC,EAAE;QAClD,IAAI,CAAC9B,SAAS,CAACC,MAAK,GAAIF,IAAI,CAAC+B,kBAAkB,CAACC,GAAG,CAACC,OAAM,IAAKA,OAAO,CAACC,YAAY,CAAC;QACpF,IAAI,CAACjC,SAAS,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACH,IAAG,GAAIA,IAAI,CAAC+B,kBAAkB,CAACC,GAAG,CAACC,OAAM,IAAKA,OAAO,CAACE,UAAU,CAAC;MAC9F,OAAO;QACLR,OAAO,CAACS,KAAK,CAAC,6CAA6C,EAAEpC,IAAI,CAAC;QAClE,IAAI,CAACC,SAAS,CAACC,MAAK,GAAI,EAAE;QAC1B,IAAI,CAACD,SAAS,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACH,IAAG,GAAI,EAAE;MACtC;IACF,EAAE,OAAOoC,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MAClE,IAAI,CAACnC,SAAS,CAACC,MAAK,GAAI,EAAE;MAC1B,IAAI,CAACD,SAAS,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACH,IAAG,GAAI,EAAE;IACtC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}