{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'AdminView',\n  data() {\n    return {\n      fullname: '',\n      email: '',\n      role: 'admin',\n      password: '',\n      isLoading: false,\n      error: null\n    };\n  },\n  methods: {\n    async register() {\n      if (!this.fullname || !this.email || !this.password) {\n        this.error = 'All fields are required';\n        return;\n      }\n      this.isLoading = true;\n      this.error = null;\n      try {\n        const response = await axios.post('http://localhost:5555/register', {\n          fullname: this.fullname,\n          email: this.email,\n          role: this.role,\n          password: this.password\n        });\n        if (response.status === 200) {\n          alert('User registered successfully!');\n          this.fullname = '';\n          this.email = '';\n          this.role = 'admin';\n          this.password = '';\n        }\n      } catch (err) {\n        this.error = err.response?.data?.message || 'Error registering user';\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    logout() {\n      localStorage.removeItem('token');\n      this.$router.push('/');\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","fullname","email","role","password","isLoading","error","methods","register","response","post","status","alert","err","message","logout","localStorage","removeItem","$router","push"],"sources":["C:\\laragon\\www\\capstone\\project_appdev\\Frontend\\src\\views\\admin.vue"],"sourcesContent":["<template>\n  <div class=\"admin-page\">\n    <header class=\"navbar\">\n      <h1 class=\"brand\">Domus Architecture</h1>\n      <button @click=\"logout\" class=\"logout\">Logout</button>\n    </header>\n    \n    <div class=\"container\">\n      <aside class=\"sidebar\">\n        <h2>Admin Panel</h2>\n        <nav>\n          <ul>\n            <li><a href=\"#\">Dashboard</a></li>\n            <li><a href=\"#\">Users</a></li>\n            <li><a href=\"#\">Settings</a></li>\n          </ul>\n        </nav>\n      </aside>\n      \n      <div class=\"content-section\">\n        <h2>Create New User</h2>\n        <form @submit.prevent=\"register\" class=\"user-form\">\n          <input type=\"text\" v-model=\"fullname\" placeholder=\"Full Name\" required />\n          <input type=\"email\" v-model=\"email\" placeholder=\"Email\" required />\n          <select v-model=\"role\" required>\n            <option value=\"admin\">Admin</option>\n            <option value=\"Lead architect\">Lead Architect</option>\n            <option value=\"Secretary\">Secretary</option>\n            <option value=\"Book keeper\">Book Keeper</option>\n            <option value=\"Liaison\">Liaison</option>\n            <option value=\"Apprentice\">Apprentice</option>\n          </select>\n          <input type=\"password\" v-model=\"password\" placeholder=\"Password\" required />\n          <div class=\"form-actions\">\n            <button type=\"reset\" class=\"cancel\">Cancel</button>\n            <button type=\"submit\" class=\"submit\" :disabled=\"isLoading\">{{ isLoading ? 'Creating...' : 'Create User' }}</button>\n          </div>\n        </form>\n        <p v-if=\"error\" class=\"error\">{{ error }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'AdminView',\n  data() {\n    return {\n      fullname: '',\n      email: '',\n      role: 'admin',\n      password: '',\n      isLoading: false,\n      error: null,\n    };\n  },\n  methods: {\n    async register() {\n      if (!this.fullname || !this.email || !this.password) {\n        this.error = 'All fields are required';\n        return;\n      }\n      this.isLoading = true;\n      this.error = null;\n      try {\n        const response = await axios.post('http://localhost:5555/register', {\n          fullname: this.fullname,\n          email: this.email,\n          role: this.role,\n          password: this.password,\n        });\n        if (response.status === 200) {\n          alert('User registered successfully!');\n          this.fullname = '';\n          this.email = '';\n          this.role = 'admin';\n          this.password = '';\n        }\n      } catch (err) {\n        this.error = err.response?.data?.message || 'Error registering user';\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    logout() {\n      localStorage.removeItem('token');\n      this.$router.push('/');\n    },\n  },\n};\n</script>\n\n<style scoped>\n.admin-page {\n  font-family: 'Poppins', sans-serif;\n  background: #f8f9fa;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n}\n\n.navbar {\n  width: 100%;\n  background: #028174;\n  color: white;\n  display: flex;\n  justify-content: space-between;\n  padding: 15px 30px;\n  font-size: 1.5rem;\n}\n\n.logout {\n  background: #ff3b30;\n  border: none;\n  padding: 10px 15px;\n  color: white;\n  cursor: pointer;\n}\n\n.container {\n  display: flex;\n  justify-content: space-between;\n  width: 80%;\n  margin-top: 30px;\n}\n\n.sidebar {\n  background: #2c3e50;\n  color: white;\n  padding: 20px;\n  width: 250px;\n  border-radius: 8px;\n}\n\n.sidebar nav ul {\n  list-style: none;\n  padding: 0;\n}\n\n.sidebar nav ul li {\n  margin: 15px 0;\n}\n\n.sidebar nav ul li a {\n  color: white;\n  text-decoration: none;\n  font-size: 18px;\n}\n\n.content-section {\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  width: 70%;\n}\n\nh2 {\n  font-size: 1.3rem;\n  margin-bottom: 15px;\n}\n\ninput, select {\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n}\n\n.form-actions {\n  display: flex;\n  justify-content: space-between;\n}\n\nbutton {\n  padding: 10px 15px;\n  border: none;\n  border-radius: 5px;\n  font-size: 1rem;\n  cursor: pointer;\n}\n\n.cancel {\n  background: #ccc;\n}\n\n.submit {\n  background: #028174;\n  color: white;\n}\n\n.error {\n  color: red;\n  margin-top: 10px;\n}\n</style>"],"mappings":";AA6CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,OAAO;MACbC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,KAAK;MAChBC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,QAAQA,CAAA,EAAG;MACf,IAAI,CAAC,IAAI,CAACP,QAAO,IAAK,CAAC,IAAI,CAACC,KAAI,IAAK,CAAC,IAAI,CAACE,QAAQ,EAAE;QACnD,IAAI,CAACE,KAAI,GAAI,yBAAyB;QACtC;MACF;MACA,IAAI,CAACD,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACC,KAAI,GAAI,IAAI;MACjB,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMX,KAAK,CAACY,IAAI,CAAC,gCAAgC,EAAE;UAClET,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,IAAI,EAAE,IAAI,CAACA,IAAI;UACfC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QACF,IAAIK,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;UAC3BC,KAAK,CAAC,+BAA+B,CAAC;UACtC,IAAI,CAACX,QAAO,GAAI,EAAE;UAClB,IAAI,CAACC,KAAI,GAAI,EAAE;UACf,IAAI,CAACC,IAAG,GAAI,OAAO;UACnB,IAAI,CAACC,QAAO,GAAI,EAAE;QACpB;MACF,EAAE,OAAOS,GAAG,EAAE;QACZ,IAAI,CAACP,KAAI,GAAIO,GAAG,CAACJ,QAAQ,EAAET,IAAI,EAAEc,OAAM,IAAK,wBAAwB;MACtE,UAAU;QACR,IAAI,CAACT,SAAQ,GAAI,KAAK;MACxB;IACF,CAAC;IACDU,MAAMA,CAAA,EAAG;MACPC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;MAChC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}