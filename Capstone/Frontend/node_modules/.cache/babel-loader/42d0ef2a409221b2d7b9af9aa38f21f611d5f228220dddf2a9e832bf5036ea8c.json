{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport { Bar } from 'vue-chartjs';\nimport axios from 'axios';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\nexport default {\n  components: {\n    BarChart: Bar\n  },\n  data() {\n    return {\n      products: [],\n      chartData: {\n        labels: [],\n        datasets: [{\n          label: 'Stock',\n          data: [],\n          backgroundColor: '#007bff'\n        }]\n      },\n      chartOptions: {\n        responsive: true,\n        plugins: {\n          legend: {\n            display: true,\n            position: 'top'\n          }\n        }\n      }\n    };\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        const response = await axios.get('http://localhost:5555/products/stock-overview', {\n          withCredentials: true\n        });\n        if (response.data && Array.isArray(response.data.stockOverview)) {\n          this.products = response.data.stockOverview.map(product => ({\n            ...product,\n            newQuantity: product.stock // Initialize newQuantity with current stock\n          }));\n          this.updateChartData();\n        }\n      } catch (error) {\n        console.error('Failed to fetch product stock data:', error);\n      }\n    },\n    updateChartData() {\n      this.chartData.labels = this.products.map(product => product.name);\n      this.chartData.datasets[0].data = this.products.map(product => product.stock);\n    },\n    async updateQuantity(productId, quantity) {\n      try {\n        const response = await axios.patch(`http://localhost:5555/products/${productId}/quantity`, {\n          quantity: parseInt(quantity)\n        }, {\n          withCredentials: true,\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.data.success) {\n          // Refresh the product list\n          await this.fetchProducts();\n          // Show success message\n          alert('Stock updated successfully');\n        }\n      } catch (error) {\n        console.error('Error updating quantity:', error);\n        alert(error.response?.data?.message || 'Failed to update stock');\n      }\n    }\n  },\n  async mounted() {\n    await this.fetchProducts();\n  }\n};","map":{"version":3,"names":["Bar","axios","Chart","ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","register","components","BarChart","data","products","chartData","labels","datasets","label","backgroundColor","chartOptions","responsive","plugins","legend","display","position","methods","fetchProducts","response","get","withCredentials","Array","isArray","stockOverview","map","product","newQuantity","stock","updateChartData","error","console","name","updateQuantity","productId","quantity","patch","parseInt","headers","success","alert","message","mounted"],"sources":["C:\\laragon\\www\\Abas-Adeva-Final-project-Appdevvv\\project_appdev\\Frontend\\src\\views\\ProductStockChart.vue"],"sourcesContent":["<template>\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h5>Product Stock Overview</h5>\n    </div>\n    <div class=\"card-body\">\n      <div class=\"table-responsive\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>Product</th>\n              <th>Current Stock</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"product in products\" :key=\"product.id\">\n              <td>{{ product.name }}</td>\n              <td>{{ product.stock }}</td>\n              <td>\n                <div class=\"input-group\">\n                  <input \n                    type=\"number\" \n                    class=\"form-control form-control-sm\" \n                    v-model=\"product.newQuantity\"\n                    min=\"1\"\n                  >\n                  <button \n                    class=\"btn btn-primary btn-sm\" \n                    @click=\"updateQuantity(product.id, product.newQuantity)\"\n                  >\n                    Update\n                  </button>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      \n      <!-- Chart -->\n      <BarChart \n        v-if=\"chartData && chartData.labels.length\" \n        :data=\"chartData\" \n        :options=\"chartOptions\"\n        class=\"chart-small mt-4\" \n      />\n      <p v-else>Loading chart data...</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Bar } from 'vue-chartjs';\nimport axios from 'axios';\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale,\n} from 'chart.js';\n\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n\nexport default {\n  components: {\n    BarChart: Bar,\n  },\n  data() {\n    return {\n      products: [],\n      chartData: {\n        labels: [],\n        datasets: [{\n          label: 'Stock',\n          data: [],\n          backgroundColor: '#007bff',\n        }],\n      },\n      chartOptions: {\n        responsive: true,\n        plugins: {\n          legend: {\n            display: true,\n            position: 'top',\n          },\n        },\n      },\n    };\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        const response = await axios.get('http://localhost:5555/products/stock-overview', {\n          withCredentials: true\n        });\n        if (response.data && Array.isArray(response.data.stockOverview)) {\n          this.products = response.data.stockOverview.map(product => ({\n            ...product,\n            newQuantity: product.stock // Initialize newQuantity with current stock\n          }));\n          this.updateChartData();\n        }\n      } catch (error) {\n        console.error('Failed to fetch product stock data:', error);\n      }\n    },\n    \n    updateChartData() {\n      this.chartData.labels = this.products.map(product => product.name);\n      this.chartData.datasets[0].data = this.products.map(product => product.stock);\n    },\n\n    async updateQuantity(productId, quantity) {\n      try {\n        const response = await axios.patch(\n          `http://localhost:5555/products/${productId}/quantity`,\n          { quantity: parseInt(quantity) },\n          { \n            withCredentials: true,\n            headers: { 'Content-Type': 'application/json' }\n          }\n        );\n        \n        if (response.data.success) {\n          // Refresh the product list\n          await this.fetchProducts();\n          // Show success message\n          alert('Stock updated successfully');\n        }\n      } catch (error) {\n        console.error('Error updating quantity:', error);\n        alert(error.response?.data?.message || 'Failed to update stock');\n      }\n    }\n  },\n  async mounted() {\n    await this.fetchProducts();\n  }\n};\n</script>\n\n<style scoped>\n.chart-small {\n  max-height: 400px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}