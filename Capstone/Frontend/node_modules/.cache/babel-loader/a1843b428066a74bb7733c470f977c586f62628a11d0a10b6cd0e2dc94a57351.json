{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { Modal } from 'bootstrap';\nimport axios from 'axios';\nimport { ref, onMounted, computed } from 'vue';\nexport default {\n  name: 'AdminOrder',\n  setup() {\n    const orders = ref([]);\n    const selectedOrder = ref(null);\n    const orderItems = ref([]);\n    let modal = null;\n    const pendingOrders = ref(0);\n    const shippedOrders = ref(0);\n    const toDeliverOrders = ref(0);\n    const completedOrders = ref(0);\n    const cancelledOrders = ref(0);\n    const searchQuery = ref('');\n    const filteredOrders = computed(() => {\n      return orders.value.filter(order => {\n        return order.fullname.toLowerCase().includes(searchQuery.value.toLowerCase()) || order.contact_number.includes(searchQuery.value) || order.id.toString().includes(searchQuery.value);\n      });\n    });\n    onMounted(async () => {\n      await fetchOrders();\n      // Initialize modal after component is mounted\n      const modalElement = document.getElementById('orderDetailsModal');\n      if (modalElement) {\n        modal = new Modal(modalElement);\n      }\n    });\n    const viewDetails = async order => {\n      selectedOrder.value = order;\n      try {\n        const response = await axios.get(`http://localhost:5555/admin/orders/${order.id}`, {\n          withCredentials: true\n        });\n        if (response.data.success) {\n          const orderDetails = response.data.orderDetails[0];\n          orderItems.value = orderDetails.items || [];\n          if (modal) {\n            modal.show();\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching order details:', error);\n        if (error.response?.status === 401) {\n          window.location.href = '/login';\n        } else {\n          alert('Failed to fetch order details');\n        }\n      }\n    };\n    const closeModal = () => {\n      if (modal) {\n        modal.hide();\n      }\n    };\n    const fetchOrders = async () => {\n      try {\n        const response = await axios.get('http://localhost:5555/admin/orders', {\n          withCredentials: true\n        });\n        if (response.data.success) {\n          // Map the orders and ensure each has a currentStatus property\n          orders.value = response.data.orders.map(order => ({\n            ...order,\n            currentStatus: order.status // Keep track of current status\n          }));\n\n          // Sort orders by date (newest first)\n          orders.value.sort((a, b) => {\n            return new Date(b.created_at) - new Date(a.created_at);\n          });\n\n          // Update status counters\n          pendingOrders.value = orders.value.filter(order => order.status === 'pending').length;\n          shippedOrders.value = orders.value.filter(order => order.status === 'ship').length;\n          toDeliverOrders.value = orders.value.filter(order => order.status === 'delivered').length;\n          completedOrders.value = orders.value.filter(order => order.status === 'complete').length;\n          cancelledOrders.value = orders.value.filter(order => order.status === 'cancelled').length;\n        } else {\n          throw new Error('Failed to fetch orders');\n        }\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n        alert('Error loading orders');\n        if (error.response?.status === 401) {\n          window.location.href = '/login';\n        }\n      }\n    };\n    const updateStatus = async (orderId, newStatus) => {\n      try {\n        const order = orders.value.find(o => o.id === orderId);\n        if (!order) return;\n\n        // Store the current status in case we need to revert\n        const currentStatus = order.status;\n\n        // First get the order details if we're completing the order\n        if (newStatus === 'complete') {\n          try {\n            console.log('Completing order:', orderId);\n            // Get order details including items\n            const detailsResponse = await axios.get(`http://localhost:5555/admin/orders/${orderId}`, {\n              withCredentials: true\n            });\n            if (!detailsResponse.data.success) {\n              throw new Error('Failed to get order details');\n            }\n\n            // Update the order status\n            const response = await axios.put(`http://localhost:5555/admin/orders/${orderId}/status`, {\n              status: newStatus\n            }, {\n              withCredentials: true\n            });\n            if (response.data.success) {\n              order.status = newStatus;\n              order.currentStatus = newStatus;\n              console.log('Order completed successfully, dispatching update event...');\n              // Dispatch event for sales chart and product logs update\n              window.dispatchEvent(new Event('orderStatusUpdated'));\n              alert('Order completed successfully. Product logs have been updated.');\n              await fetchOrders(); // Refresh the orders list\n            }\n          } catch (error) {\n            console.error('Error completing order:', error);\n            alert(error.response?.data?.message || 'Failed to complete order');\n            order.status = currentStatus;\n          }\n        } else {\n          // For other status updates\n          try {\n            const response = await axios.put(`http://localhost:5555/admin/orders/${orderId}/status`, {\n              status: newStatus\n            }, {\n              withCredentials: true\n            });\n            if (response.data.success) {\n              order.status = newStatus;\n              order.currentStatus = newStatus;\n              // Dispatch event for sales chart update\n              window.dispatchEvent(new Event('orderStatusUpdated'));\n              alert('Order status updated successfully');\n              await fetchOrders(); // Refresh the orders list\n            }\n          } catch (error) {\n            console.error('Error updating status:', error);\n            alert(error.response?.data?.message || 'Failed to update order status');\n            order.status = currentStatus;\n          }\n        }\n      } catch (error) {\n        console.error('Error in updateStatus:', error);\n        alert('An unexpected error occurred');\n        const order = orders.value.find(o => o.id === orderId);\n        if (order) {\n          order.status = order.currentStatus || 'pending';\n        }\n      }\n    };\n    const formatDate = dateString => {\n      return new Date(dateString).toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    };\n    const getStatusDisplay = status => {\n      const statusMap = {\n        'pending': 'To Pay',\n        'ship': 'To Ship',\n        'delivered': 'To Deliver',\n        'complete': 'Completed',\n        'cancelled': 'Cancelled'\n      };\n      return statusMap[status] || status;\n    };\n    const getStatusBadgeClass = status => {\n      const classMap = {\n        'pending': 'badge bg-warning',\n        'ship': 'badge bg-primary',\n        'delivered': 'badge bg-info',\n        'complete': 'badge bg-success',\n        'cancelled': 'badge bg-danger'\n      };\n      return classMap[status] || 'badge bg-secondary';\n    };\n    const handleLogout = async () => {\n      if (confirm('Are you sure you want to logout?')) {\n        try {\n          await axios.post('http://localhost:5555/logout', {}, {\n            withCredentials: true\n          });\n          localStorage.clear();\n          window.location.href = '/login';\n        } catch (error) {\n          console.error('Logout failed:', error);\n        }\n      }\n    };\n    return {\n      orders,\n      selectedOrder,\n      orderItems,\n      pendingOrders,\n      shippedOrders,\n      toDeliverOrders,\n      completedOrders,\n      cancelledOrders,\n      searchQuery,\n      filteredOrders,\n      viewDetails,\n      closeModal,\n      formatDate,\n      getStatusDisplay,\n      updateStatus,\n      handleLogout\n    };\n  }\n};","map":{"version":3,"names":["Modal","axios","ref","onMounted","computed","name","setup","orders","selectedOrder","orderItems","modal","pendingOrders","shippedOrders","toDeliverOrders","completedOrders","cancelledOrders","searchQuery","filteredOrders","value","filter","order","fullname","toLowerCase","includes","contact_number","id","toString","fetchOrders","modalElement","document","getElementById","viewDetails","response","get","withCredentials","data","success","orderDetails","items","show","error","console","status","window","location","href","alert","closeModal","hide","map","currentStatus","sort","a","b","Date","created_at","length","Error","updateStatus","orderId","newStatus","find","o","log","detailsResponse","put","dispatchEvent","Event","message","formatDate","dateString","toLocaleDateString","year","month","day","getStatusDisplay","statusMap","getStatusBadgeClass","classMap","handleLogout","confirm","post","localStorage","clear"],"sources":["C:\\laragon\\www\\Abas-Adeva-Final-project-Appdevvv\\project_appdev\\Frontend\\src\\views\\AdminOrder.vue"],"sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <div class=\"admin-order\">\n      <div class=\"page-header\">\n        <div class=\"header-content\">\n          <h1>Order Management</h1>\n          <p class=\"text-muted\">Monitor and manage your store's orders</p>\n        </div>\n      </div>\n\n      <div class=\"dashboard-stats\">\n        <div class=\"stat-card to-pay\">\n          <div class=\"stat-icon\">\n            <i class=\"fas fa-wallet\"></i>\n          </div>\n          <div class=\"stat-details\">\n            <div class=\"stat-value\">{{ pendingOrders }}</div>\n            <div class=\"stat-info\">\n              <h3>TO PAY</h3>\n              <p>Pending Payment</p>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"stat-card to-ship\">\n          <div class=\"stat-icon\">\n            <i class=\"fas fa-shipping-fast\"></i>\n          </div>\n          <div class=\"stat-details\">\n            <div class=\"stat-value\">{{ shippedOrders }}</div>\n            <div class=\"stat-info\">\n              <h3>TO SHIP</h3>\n              <p>Ready for Shipping</p>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"stat-card to-deliver\">\n          <div class=\"stat-icon\">\n            <i class=\"fas fa-truck\"></i>\n          </div>\n          <div class=\"stat-details\">\n            <div class=\"stat-value\">{{ toDeliverOrders }}</div>\n            <div class=\"stat-info\">\n              <h3>TO DELIVER</h3>\n              <p>In Transit</p>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"stat-card completed\">\n          <div class=\"stat-icon\">\n            <i class=\"fas fa-check-circle\"></i>\n          </div>\n          <div class=\"stat-details\">\n            <div class=\"stat-value\">{{ completedOrders }}</div>\n            <div class=\"stat-info\">\n              <h3>COMPLETED</h3>\n              <p>Successful Orders</p>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"stat-card cancelled\">\n          <div class=\"stat-icon\">\n            <i class=\"fas fa-times-circle\"></i>\n          </div>\n          <div class=\"stat-details\">\n            <div class=\"stat-value\">{{ cancelledOrders }}</div>\n            <div class=\"stat-info\">\n              <h3>CANCELLED</h3>\n              <p>Cancelled Orders</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Sidebar -->\n      <nav class=\"sidebar\">\n        <div class=\"sidebar-header\">\n          <i class=\"fas fa-graduation-cap fs-2 mb-2\"></i>\n          <h4>Margatheo Store</h4>\n        </div>\n        <ul class=\"nav nav-pills flex-column\">\n          <!-- Dashboard Link -->\n          <li class=\"nav-item\">\n            <router-link to=\"/admin/dashboard\" class=\"nav-link\" active-class=\"active\">\n              <i class=\"fas fa-home\"></i>\n              <span>Dashboard</span>\n            </router-link>\n          </li>\n          \n          <!-- Products Link -->\n          <li class=\"nav-item\">\n            <router-link to=\"/admin/products\" class=\"nav-link\" active-class=\"active\">\n              <i class=\"fas fa-box\"></i>\n              <span>Products</span>\n            </router-link>\n          </li>\n\n          <!-- Product Logs Link -->\n          <li class=\"nav-item\">\n            <router-link to=\"/admin/product-logs\" class=\"nav-link\" active-class=\"active\">\n              <i class=\"fas fa-clipboard-list\"></i>\n              <span>Product Logs</span>\n            </router-link>\n          </li>\n\n          <!-- Orders Link -->\n          <li class=\"nav-item\">\n            <router-link to=\"/admin/orders\" class=\"nav-link\" active-class=\"active\">\n              <i class=\"fas fa-truck\"></i>\n              <span>Orders</span>\n            </router-link>\n          </li>\n\n          <!-- Logout Button -->\n          <li class=\"nav-item mt-auto\">\n            <button @click=\"handleLogout\" class=\"logout-btn\">\n              <i class=\"fas fa-sign-out-alt\"></i>\n              <span>Logout</span>\n            </button>\n          </li>\n        </ul>\n      </nav>\n\n      <!-- Main Content -->\n      <div class=\"main-content\">\n        <div class=\"orders-section\">\n          <div class=\"section-header\">\n            <h2>Recent Orders</h2>\n            <div class=\"search-wrapper\">\n              <input \n                type=\"text\" \n                placeholder=\"Search by ID, customer or contact...\" \n                v-model=\"searchQuery\"\n                class=\"search-input\"\n              >\n            </div>\n          </div>\n          \n          <div class=\"orders-table-wrapper\">\n            <table class=\"orders-table\">\n              <thead>\n                <tr>\n                  <th>ORDER ID</th>\n                  <th>CUSTOMER</th>\n                  <th>CONTACT</th>\n                  <th>TOTAL PRICE</th>\n                  <th>STATUS</th>\n                  <th>DATE</th>\n                  <th class=\"text-center\">ACTIONS</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for=\"order in filteredOrders\" :key=\"order.id\">\n                  <td>\n                    <span class=\"order-id\">#{{ order.id }}</span>\n                  </td>\n                  <td>\n                    <div class=\"customer-name\">{{ order.fullname || 'Customer' }}</div>\n                  </td>\n                  <td>{{ order.contact_number }}</td>\n                  <td>\n                    <div class=\"price-tag\">₱{{ parseFloat(order.total_price).toFixed(2) }}</div>\n                  </td>\n                  <td>\n                    <span :class=\"['status-pill', `status-${order.status}`]\">\n                      {{ getStatusDisplay(order.status) }}\n                    </span>\n                  </td>\n                  <td>\n                    <span class=\"date-text\">{{ formatDate(order.created_at) }}</span>\n                  </td>\n                  <td>\n                    <div class=\"actions-cell\">\n                      <select \n                        v-model=\"order.status\" \n                        @change=\"updateStatus(order.id, $event.target.value)\"\n                        class=\"status-select\"\n                        :disabled=\"order.status === 'complete' || order.status === 'cancelled'\"\n                      >\n                        <option value=\"pending\">To Pay</option>\n                        <option value=\"ship\">To Ship</option>\n                        <option value=\"delivered\">To Deliver</option>\n                        <option value=\"complete\">Complete</option>\n                        <option value=\"cancelled\">Cancelled</option>\n                      </select>\n                      <button \n                        @click=\"viewDetails(order)\"\n                        class=\"view-btn\"\n                      >\n                        <i class=\"fas fa-eye\"></i>\n                      </button>\n                      <!-- Order Details Modal -->\n<div class=\"modal fade\" id=\"orderDetailsModal\" tabindex=\"-1\" aria-labelledby=\"orderDetailsModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-lg\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"orderDetailsModalLabel\">Order Details</h5>\n        <button type=\"button\" class=\"btn-close\" @click=\"closeModal\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"modal-body\" v-if=\"selectedOrder\">\n        <div class=\"order-info\">\n          <div class=\"info-group\">\n            <h6>Order Information</h6>\n            <p><strong>Order ID:</strong> #{{ selectedOrder.id }}</p>\n            <p><strong>Date:</strong> {{ formatDate(selectedOrder.created_at) }}</p>\n            <p><strong>Status:</strong> {{ getStatusDisplay(selectedOrder.status) }}</p>\n            <p><strong>Total Amount:</strong> ₱{{ parseFloat(selectedOrder.total_price).toFixed(2) }}</p>\n          </div>\n          <div class=\"info-group\">\n            <h6>Customer Information</h6>\n            <p><strong>Name:</strong> {{ selectedOrder.fullname }}</p>\n            <p><strong>Contact:</strong> {{ selectedOrder.contact_number }}</p>\n            <p><strong>Email:</strong> {{ selectedOrder.email }}</p>\n            <p><strong>Address:</strong> {{ selectedOrder.address }}</p>\n          </div>\n        </div>\n        <div class=\"order-items\">\n          <h6>Order Items</h6>\n          <div class=\"table-responsive\">\n            <table class=\"table\">\n              <thead>\n                <tr>\n                  <th>Product</th>\n                  <th>Quantity</th>\n                  <th>Price</th>\n                  <th>Total</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for=\"item in orderItems\" :key=\"item.id\">\n                  <td>{{ item.product_name }}</td>\n                  <td>{{ item.quantity }}</td>\n                  <td>₱{{ parseFloat(item.price).toFixed(2) }}</td>\n                  <td>₱{{ (item.quantity * item.price).toFixed(2) }}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" @click=\"closeModal\">Close</button>\n      </div>\n    </div>\n  </div>\n</div>\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Modal } from 'bootstrap';\nimport axios from 'axios';\nimport { ref, onMounted, computed } from 'vue';\n\nexport default {\n  name: 'AdminOrder',\n  setup() {\n    const orders = ref([]);\n    const selectedOrder = ref(null);\n    const orderItems = ref([]);\n    let modal = null;\n\n    const pendingOrders = ref(0);\n    const shippedOrders = ref(0);\n    const toDeliverOrders = ref(0);\n    const completedOrders = ref(0);\n    const cancelledOrders = ref(0);\n\n    const searchQuery = ref('');\n\n    const filteredOrders = computed(() => {\n      return orders.value.filter(order => {\n        return order.fullname.toLowerCase().includes(searchQuery.value.toLowerCase()) ||\n               order.contact_number.includes(searchQuery.value) ||\n               order.id.toString().includes(searchQuery.value);\n      });\n    });\n\n    onMounted(async () => {\n      await fetchOrders();\n      // Initialize modal after component is mounted\n      const modalElement = document.getElementById('orderDetailsModal');\n      if (modalElement) {\n        modal = new Modal(modalElement);\n      }\n    });\n\n    const viewDetails = async (order) => {\n      selectedOrder.value = order;\n      try {\n        const response = await axios.get(`http://localhost:5555/admin/orders/${order.id}`, {\n          withCredentials: true\n        });\n        \n        if (response.data.success) {\n          const orderDetails = response.data.orderDetails[0];\n          orderItems.value = orderDetails.items || [];\n          if (modal) {\n            modal.show();\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching order details:', error);\n        if (error.response?.status === 401) {\n          window.location.href = '/login';\n        } else {\n          alert('Failed to fetch order details');\n        }\n      }\n    };\n\n    const closeModal = () => {\n      if (modal) {\n        modal.hide();\n      }\n    };\n\n    const fetchOrders = async () => {\n      try {\n        const response = await axios.get('http://localhost:5555/admin/orders', {\n          withCredentials: true\n        });\n\n        if (response.data.success) {\n          // Map the orders and ensure each has a currentStatus property\n          orders.value = response.data.orders.map(order => ({\n            ...order,\n            currentStatus: order.status // Keep track of current status\n          }));\n          \n          // Sort orders by date (newest first)\n          orders.value.sort((a, b) => {\n            return new Date(b.created_at) - new Date(a.created_at);\n          });\n\n          // Update status counters\n          pendingOrders.value = orders.value.filter(order => order.status === 'pending').length;\n          shippedOrders.value = orders.value.filter(order => order.status === 'ship').length;\n          toDeliverOrders.value = orders.value.filter(order => order.status === 'delivered').length;\n          completedOrders.value = orders.value.filter(order => order.status === 'complete').length;\n          cancelledOrders.value = orders.value.filter(order => order.status === 'cancelled').length;\n        } else {\n          throw new Error('Failed to fetch orders');\n        }\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n        alert('Error loading orders');\n        if (error.response?.status === 401) {\n          window.location.href = '/login';\n        }\n      }\n    };\n\n    const updateStatus = async (orderId, newStatus) => {\n      try {\n        const order = orders.value.find(o => o.id === orderId);\n        if (!order) return;\n\n        // Store the current status in case we need to revert\n        const currentStatus = order.status;\n\n        // First get the order details if we're completing the order\n        if (newStatus === 'complete') {\n          try {\n            console.log('Completing order:', orderId);\n            // Get order details including items\n            const detailsResponse = await axios.get(\n              `http://localhost:5555/admin/orders/${orderId}`,\n              { withCredentials: true }\n            );\n\n            if (!detailsResponse.data.success) {\n              throw new Error('Failed to get order details');\n            }\n\n            // Update the order status\n            const response = await axios.put(\n              `http://localhost:5555/admin/orders/${orderId}/status`,\n              { status: newStatus },\n              { withCredentials: true }\n            );\n\n            if (response.data.success) {\n              order.status = newStatus;\n              order.currentStatus = newStatus;\n              console.log('Order completed successfully, dispatching update event...');\n              // Dispatch event for sales chart and product logs update\n              window.dispatchEvent(new Event('orderStatusUpdated'));\n              alert('Order completed successfully. Product logs have been updated.');\n              await fetchOrders(); // Refresh the orders list\n            }\n          } catch (error) {\n            console.error('Error completing order:', error);\n            alert(error.response?.data?.message || 'Failed to complete order');\n            order.status = currentStatus;\n          }\n        } else {\n          // For other status updates\n          try {\n            const response = await axios.put(\n              `http://localhost:5555/admin/orders/${orderId}/status`,\n              { status: newStatus },\n              { withCredentials: true }\n            );\n\n            if (response.data.success) {\n              order.status = newStatus;\n              order.currentStatus = newStatus;\n              // Dispatch event for sales chart update\n              window.dispatchEvent(new Event('orderStatusUpdated'));\n              alert('Order status updated successfully');\n              await fetchOrders(); // Refresh the orders list\n            }\n          } catch (error) {\n            console.error('Error updating status:', error);\n            alert(error.response?.data?.message || 'Failed to update order status');\n            order.status = currentStatus;\n          }\n        }\n      } catch (error) {\n        console.error('Error in updateStatus:', error);\n        alert('An unexpected error occurred');\n        const order = orders.value.find(o => o.id === orderId);\n        if (order) {\n          order.status = order.currentStatus || 'pending';\n        }\n      }\n    };\n\n    const formatDate = (dateString) => {\n      return new Date(dateString).toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    };\n\n    const getStatusDisplay = (status) => {\n      const statusMap = {\n        'pending': 'To Pay',\n        'ship': 'To Ship',\n        'delivered': 'To Deliver',\n        'complete': 'Completed',\n        'cancelled': 'Cancelled'\n      };\n      return statusMap[status] || status;\n    };\n\n    const getStatusBadgeClass = (status) => {\n      const classMap = {\n        'pending': 'badge bg-warning',\n        'ship': 'badge bg-primary',\n        'delivered': 'badge bg-info',\n        'complete': 'badge bg-success',\n        'cancelled': 'badge bg-danger'\n      };\n      return classMap[status] || 'badge bg-secondary';\n    };\n\n    const handleLogout = async () => {\n      if (confirm('Are you sure you want to logout?')) {\n        try {\n          await axios.post('http://localhost:5555/logout', {}, {\n            withCredentials: true\n          });\n          localStorage.clear();\n          window.location.href = '/login';\n        } catch (error) {\n          console.error('Logout failed:', error);\n        }\n      }\n    };\n\n    return {\n      orders,\n      selectedOrder,\n      orderItems,\n      pendingOrders,\n      shippedOrders,\n      toDeliverOrders,\n      completedOrders,\n      cancelledOrders,\n      searchQuery,\n      filteredOrders,\n      viewDetails,\n      closeModal,\n      formatDate,\n      getStatusDisplay,\n      updateStatus,\n      handleLogout\n    };\n  }\n};\n</script>\n\n<style scoped>\n.container-fluid {\n  padding-left: 280px; /* Adjust based on sidebar width */\n  width: 100%;\n  min-height: 100vh;\n}\n\n.admin-order {\n  max-width: 1400px;\n  margin: 0 auto;\n  padding: 2rem 3rem;\n}\n\n.page-header {\n  text-align: left;\n  margin-bottom: 2rem;\n  padding: 1rem 0;\n}\n\n.dashboard-stats {\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 1.25rem;\n  margin-bottom: 2.5rem;\n}\n\n.orders-section {\n  background: white;\n  border-radius: 12px;\n  padding: 1.5rem;\n  margin-top: 1rem;\n}\n\n.sidebar {\n  width: 280px;\n  min-height: 100vh;\n  background: linear-gradient(180deg, #2C3E50 0%, #3498DB 100%);\n  color: white;\n  padding: 2rem 1.5rem;\n  position: fixed;\n  left: 0;\n  top: 0;\n  z-index: 1000;\n  box-shadow: 4px 0 10px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n}\n\n.sidebar-header {\n  text-align: center;\n  margin-bottom: 2rem;\n  padding-bottom: 1rem;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.sidebar-header i {\n  color: #FFC107;\n  margin-bottom: 0.5rem;\n}\n\n.sidebar-header h4 {\n  margin: 0;\n  font-weight: 600;\n  font-size: 1.25rem;\n}\n\n.nav-link {\n  color: rgba(255, 255, 255, 0.8) !important;\n  padding: 1rem 1.5rem;\n  border-radius: 12px;\n  margin-bottom: 0.5rem;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.nav-link:hover {\n  background: rgba(255, 255, 255, 0.1);\n  color: white !important;\n  transform: translateX(5px);\n}\n\n.nav-link.active {\n  background: rgba(255, 255, 255, 0.2);\n  color: white !important;\n  font-weight: 600;\n}\n\n.nav-link i {\n  font-size: 1.25rem;\n  width: 1.5rem;\n  text-align: center;\n}\n\n.logout-btn {\n  width: 100%;\n  padding: 1rem;\n  background: rgba(255, 255, 255, 0.1);\n  border: none;\n  border-radius: 12px;\n  color: white;\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  margin-top: 2rem;\n}\n\n.logout-btn:hover {\n  background: #E74C3C;\n}\n\n.logout-btn i {\n  font-size: 1.25rem;\n}\n\n.orders-section {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.5rem;\n  border-bottom: 1px solid #f1f5f9;\n}\n\n.section-header h2 {\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: #1e293b;\n  margin: 0;\n}\n\n.search-wrapper {\n  position: relative;\n  width: 320px;\n}\n\n.search-input {\n  width: 100%;\n  padding: 0.75rem 1rem;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  font-size: 0.875rem;\n  color: #1e293b;\n  transition: all 0.2s;\n}\n\n.search-input:focus {\n  outline: none;\n  border-color: #3b82f6;\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n}\n\n.orders-table-wrapper {\n  overflow-x: auto;\n  padding: 0.5rem;\n}\n\n.orders-table {\n  width: 100%;\n  border-collapse: separate;\n  border-spacing: 0;\n}\n\n.orders-table th {\n  padding: 1rem;\n  font-size: 0.75rem;\n  font-weight: 600;\n  color: #64748b;\n  text-align: left;\n  letter-spacing: 0.05em;\n  border-bottom: 1px solid #e2e8f0;\n}\n\n.orders-table td {\n  padding: 1rem;\n  vertical-align: middle;\n  border-bottom: 1px solid #f1f5f9;\n}\n\n.orders-table tr:hover {\n  background-color: #f8fafc;\n}\n\n.order-id {\n  font-weight: 600;\n  color: #1e293b;\n}\n\n.customer-name {\n  font-weight: 500;\n  color: #1e293b;\n}\n\n.price-tag {\n  font-weight: 600;\n  color: #059669;\n}\n\n.date-text {\n  color: #64748b;\n  font-size: 0.875rem;\n}\n\n.status-pill {\n  display: inline-flex;\n  align-items: center;\n  padding: 0.375rem 0.75rem;\n  border-radius: 9999px;\n  font-size: 0.75rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.status-pending {\n  background-color: #fef3c7;\n  color: #d97706;\n}\n\n.status-ship {\n  background-color: #dbeafe;\n  color: #2563eb;\n}\n\n.status-delivered {\n  background-color: #e0f2fe;\n  color: #0284c7;\n}\n\n.status-complete {\n  background-color: #dcfce7;\n  color: #16a34a;\n}\n\n.status-cancelled {\n  background-color: #fee2e2;\n  color: #dc2626;\n}\n\n.actions-cell {\n  display: flex;\n  gap: 0.5rem;\n  justify-content: flex-start;\n  align-items: center;\n}\n\n.status-select {\n  padding: 0.5rem;\n  border: 1px solid #e2e8f0;\n  border-radius: 6px;\n  font-size: 0.875rem;\n  color: #1e293b;\n  background: white;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.status-select:focus {\n  outline: none;\n  border-color: #3b82f6;\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n}\n\n.status-select:disabled {\n  background-color: #f1f5f9;\n  cursor: not-allowed;\n  opacity: 0.7;\n}\n\n.view-btn {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 2rem;\n  height: 2rem;\n  border: none;\n  border-radius: 6px;\n  background-color: #3b82f6;\n  color: white;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.view-btn:hover {\n  background-color: #2563eb;\n}\n\n.view-btn i {\n  font-size: 0.875rem;\n}\n\n/* Modal Styles */\n.modal-body {\n  padding: 1.5rem;\n}\n\n.order-info {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 2rem;\n  margin-bottom: 2rem;\n}\n\n.info-group {\n  background: #f8fafc;\n  padding: 1.5rem;\n  border-radius: 8px;\n}\n\n.info-group h6 {\n  color: #1e293b;\n  font-weight: 600;\n  margin-bottom: 1rem;\n  padding-bottom: 0.5rem;\n  border-bottom: 2px solid #e2e8f0;\n}\n\n.info-group p {\n  margin-bottom: 0.5rem;\n  color: #64748b;\n}\n\n.info-group strong {\n  color: #1e293b;\n}\n\n.order-items {\n  margin-top: 1rem;\n}\n\n.order-items h6 {\n  color: #1e293b;\n  font-weight: 600;\n  margin-bottom: 1rem;\n}\n\n.table {\n  width: 100%;\n  margin-bottom: 1rem;\n  background-color: transparent;\n}\n\n.table th {\n  font-weight: 600;\n  color: #1e293b;\n  background: #f8fafc;\n  padding: 0.75rem;\n}\n\n.table td {\n  padding: 0.75rem;\n  vertical-align: middle;\n  color: #64748b;\n}\n\n.table-responsive {\n  overflow-x: auto;\n  -webkit-overflow-scrolling: touch;\n}\n\n@media (max-width: 1280px) {\n  .container-fluid {\n    padding-left: 260px;\n  }\n  \n  .dashboard-stats {\n    grid-template-columns: repeat(3, 1fr);\n  }\n}\n\n@media (max-width: 768px) {\n  .container-fluid {\n    padding-left: 0;\n  }\n  \n  .admin-order {\n    padding: 1rem;\n  }\n\n  .dashboard-stats {\n    grid-template-columns: repeat(2, 1fr);\n  }\n}\n\n@media (max-width: 480px) {\n  .dashboard-stats {\n    grid-template-columns: 1fr;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}