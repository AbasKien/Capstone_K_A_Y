{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport loginview from '../views/loginview.vue';\nimport register from '../views/register.vue';\nimport home from '../views/home.vue';\nimport admin from '../views/admin.vue';\nimport product from '../views/product.vue';\nimport cart from '../views/cart.vue';\nimport checkout from '../views/checkout.vue';\nimport landingpage from '../views/landingpage.vue';\nimport profile from '../views/profile.vue';\nimport adminprod from '../views/adminprod.vue';\nimport productlogs from \"../views/product-logs.vue\";\nimport AdminOrder from \"../views/AdminOrder.vue\";\nimport orderchart from \"../views/orderchart.vue\";\nimport axios from 'axios';\nconst routes = [{\n  path: '/',\n  name: 'landingpage',\n  component: landingpage\n}, {\n  path: '/login',\n  name: 'login',\n  component: loginview\n}, {\n  path: '/signup',\n  name: 'signup',\n  component: register\n}, {\n  path: '/home',\n  name: 'home',\n  component: home,\n  meta: {\n    requiresRole: 'client'\n  }\n}, {\n  path: '/profile',\n  name: 'profile',\n  component: profile,\n  meta: {\n    requiresRole: 'client'\n  }\n}, {\n  path: '/admin/dashboard',\n  name: 'admin',\n  component: admin,\n  meta: {\n    requiresRole: 'admin'\n  }\n}, {\n  path: '/admin/products',\n  name: 'adminprod',\n  component: adminprod,\n  meta: {\n    requiresRole: 'admin'\n  }\n}, {\n  path: \"/admin/product-logs\",\n  name: \"productlogs\",\n  component: productlogs,\n  meta: {\n    requiresRole: \"admin\"\n  }\n}, {\n  path: \"/admin/orders\",\n  name: \"adminOrders\",\n  component: AdminOrder,\n  meta: {\n    requiresRole: \"admin\"\n  }\n}, {\n  path: '/cart',\n  name: 'Cart',\n  component: cart,\n  meta: {\n    requiresRole: 'client'\n  }\n}, {\n  path: '/product',\n  name: 'Product',\n  component: product\n}, {\n  path: '/checkout',\n  name: 'checkout',\n  component: checkout,\n  meta: {\n    requiresRole: 'client'\n  }\n}, {\n  path: '/thank-you/:orderId',\n  name: 'ThankYou',\n  component: () => import('../views/ThankYou.vue'),\n  meta: {\n    requiresRole: 'client'\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\n// Navigation Guard\nrouter.beforeEach(async (to, from, next) => {\n  const userRole = localStorage.getItem('userRole');\n  const token = localStorage.getItem('token');\n  const isLoggedIn = token && userRole;\n\n  // Public routes that don't require authentication\n  const publicRoutes = ['landingpage', 'login', 'signup'];\n\n  // If route is public, allow access\n  if (publicRoutes.includes(to.name)) {\n    // If user is logged in and trying to access login/signup, redirect to appropriate dashboard\n    if (isLoggedIn && (to.name === 'login' || to.name === 'signup')) {\n      return next(userRole === 'admin' ? '/admin/dashboard' : '/home');\n    }\n    return next();\n  }\n\n  // For protected routes, check if user is logged in\n  if (!isLoggedIn) {\n    return next('/login');\n  }\n\n  // For role-protected routes, verify role\n  if (to.meta.requiresRole) {\n    // If role doesn't match, redirect to appropriate dashboard\n    if (to.meta.requiresRole !== userRole) {\n      return next(userRole === 'admin' ? '/admin/dashboard' : '/home');\n    }\n  }\n\n  // If all checks pass, proceed\n  next();\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","loginview","register","home","admin","product","cart","checkout","landingpage","profile","adminprod","productlogs","AdminOrder","orderchart","axios","routes","path","name","component","meta","requiresRole","router","history","process","env","BASE_URL","beforeEach","to","from","next","userRole","localStorage","getItem","token","isLoggedIn","publicRoutes","includes"],"sources":["C:/laragon/www/Abas-Adeva-Final-project-Appdev_Ito yun/project_appdev/Frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\nimport loginview from '../views/loginview.vue';\nimport register from '../views/register.vue';\nimport home from '../views/home.vue';\nimport admin from '../views/admin.vue';\nimport product from '../views/product.vue';\nimport cart from '../views/cart.vue';\nimport checkout from '../views/checkout.vue';\nimport landingpage from '../views/landingpage.vue';\nimport profile from '../views/profile.vue';\nimport adminprod from '../views/adminprod.vue';\nimport productlogs from \"../views/product-logs.vue\";\nimport AdminOrder from \"../views/AdminOrder.vue\";\nimport orderchart from \"../views/orderchart.vue\";\n\nimport axios from 'axios';\n\nconst routes = [\n  {\n    path: '/',\n    name: 'landingpage',\n    component: landingpage,\n  },\n  {\n    path: '/login',\n    name: 'login',\n    component: loginview,\n  },\n  {\n    path: '/signup',\n    name: 'signup',\n    component: register,\n  },\n  {\n    path: '/home',\n    name: 'home',\n    component: home,\n    meta: { requiresRole: 'client' },\n  },\n  {\n    path: '/profile',\n    name: 'profile',\n    component: profile,\n    meta: { requiresRole: 'client' },\n  },\n  {\n    path: '/admin/dashboard',\n    name: 'admin',\n    component: admin,\n    meta: { requiresRole: 'admin' },\n  },\n  {\n    path: '/admin/products',\n    name: 'adminprod',\n    component: adminprod,\n    meta: { requiresRole: 'admin' },\n  },\n  {\n    path: \"/admin/product-logs\",\n    name: \"productlogs\",\n    component: productlogs,\n    meta: { requiresRole: \"admin\" },\n  },\n  {\n    path: \"/admin/orders\",\n    name: \"adminOrders\",\n    component: AdminOrder,\n    meta: { requiresRole: \"admin\" },\n  },\n  {\n    path: '/cart',\n    name: 'Cart',\n    component: cart,\n    meta: { requiresRole: 'client' },\n  },\n  {\n    path: '/product',\n    name: 'Product',\n    component: product,\n  },\n  {\n    path: '/checkout',\n    name: 'checkout',\n    component: checkout,\n    meta: { requiresRole: 'client' },\n  },\n  {\n    path: '/thank-you/:orderId',\n    name: 'ThankYou',\n    component: () => import('../views/ThankYou.vue'),\n    meta: { requiresRole: 'client' },\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n});\n\n// Navigation Guard\nrouter.beforeEach(async (to, from, next) => {\n  const userRole = localStorage.getItem('userRole');\n  const token = localStorage.getItem('token');\n  const isLoggedIn = token && userRole;\n\n  // Public routes that don't require authentication\n  const publicRoutes = ['landingpage', 'login', 'signup'];\n  \n  // If route is public, allow access\n  if (publicRoutes.includes(to.name)) {\n    // If user is logged in and trying to access login/signup, redirect to appropriate dashboard\n    if (isLoggedIn && (to.name === 'login' || to.name === 'signup')) {\n      return next(userRole === 'admin' ? '/admin/dashboard' : '/home');\n    }\n    return next();\n  }\n\n  // For protected routes, check if user is logged in\n  if (!isLoggedIn) {\n    return next('/login');\n  }\n\n  // For role-protected routes, verify role\n  if (to.meta.requiresRole) {\n    // If role doesn't match, redirect to appropriate dashboard\n    if (to.meta.requiresRole !== userRole) {\n      return next(userRole === 'admin' ? '/admin/dashboard' : '/home');\n    }\n  }\n\n  // If all checks pass, proceed\n  next();\n});\n\nexport default router;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}