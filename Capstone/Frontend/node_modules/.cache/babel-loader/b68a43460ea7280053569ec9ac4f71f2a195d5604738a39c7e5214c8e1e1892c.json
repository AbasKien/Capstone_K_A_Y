{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'LoginView',\n  data() {\n    return {\n      email: '',\n      password: '',\n      otpCode: '',\n      newPassword: '',\n      confirmNewPassword: '',\n      error: null,\n      isLoading: false,\n      showForgotPassword: false,\n      showResetPassword: false,\n      resendTimer: 0,\n      resendInterval: null\n    };\n  },\n  methods: {\n    async handleLogin() {\n      if (!this.email || !this.password) {\n        this.error = \"Please fill in all fields\";\n        return;\n      }\n      this.isLoading = true;\n      this.error = null;\n      try {\n        const response = await axios.post('http://localhost:5555/login', {\n          email: this.email,\n          password: this.password\n        });\n        if (response.status === 200) {\n          // Store user data and token\n          localStorage.setItem('user', JSON.stringify(response.data.user));\n          localStorage.setItem('token', response.data.token);\n\n          // Redirect to home page\n          this.$router.push('/');\n        }\n      } catch (err) {\n        console.error('Login error:', err);\n        this.error = err.response?.data?.message || \"Login failed. Please try again.\";\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async handleForgotPassword() {\n      if (!this.email) {\n        this.error = \"Please enter your email address\";\n        return;\n      }\n      this.isLoading = true;\n      this.error = null;\n      try {\n        const response = await axios.post('http://localhost:5555/forgot-password', {\n          email: this.email\n        });\n        if (response.status === 200) {\n          this.showForgotPassword = false;\n          this.showResetPassword = true;\n          this.startResendTimer();\n          alert('OTP has been sent to your email.');\n        }\n      } catch (err) {\n        console.error('Forgot password error:', err);\n        this.error = err.response?.data?.message || \"Failed to send reset OTP. Please try again.\";\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async handleResetPassword() {\n      if (!this.otpCode || !this.newPassword || !this.confirmNewPassword) {\n        this.error = \"Please fill in all fields\";\n        return;\n      }\n      if (this.newPassword !== this.confirmNewPassword) {\n        this.error = \"Passwords do not match\";\n        return;\n      }\n      if (this.newPassword.length < 6) {\n        this.error = \"Password must be at least 6 characters long\";\n        return;\n      }\n      this.isLoading = true;\n      this.error = null;\n      try {\n        const response = await axios.post('http://localhost:5555/reset-password', {\n          email: this.email,\n          otp: this.otpCode,\n          newPassword: this.newPassword\n        });\n        if (response.status === 200) {\n          alert('Password has been reset successfully. You can now login with your new password.');\n          this.resetForm();\n          this.showResetPassword = false;\n        }\n      } catch (err) {\n        console.error('Reset password error:', err);\n        this.error = err.response?.data?.message || \"Failed to reset password. Please try again.\";\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    resetForm() {\n      this.password = '';\n      this.otpCode = '';\n      this.newPassword = '';\n      this.confirmNewPassword = '';\n      this.error = null;\n    },\n    cancelReset() {\n      this.resetForm();\n      this.email = '';\n      this.showForgotPassword = false;\n      this.showResetPassword = false;\n      if (this.resendInterval) {\n        clearInterval(this.resendInterval);\n      }\n      this.resendTimer = 0;\n    },\n    async resendOTP() {\n      this.isLoading = true;\n      this.error = null;\n      try {\n        const response = await axios.post('http://localhost:5555/forgot-password', {\n          email: this.email\n        });\n        if (response.status === 200) {\n          alert('New OTP has been sent to your email.');\n          this.startResendTimer();\n        }\n      } catch (err) {\n        console.error('Resend OTP error:', err);\n        this.error = err.response?.data?.message || \"Failed to resend OTP. Please try again.\";\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    startResendTimer() {\n      this.resendTimer = 60;\n      if (this.resendInterval) {\n        clearInterval(this.resendInterval);\n      }\n      this.resendInterval = setInterval(() => {\n        if (this.resendTimer > 0) {\n          this.resendTimer--;\n        } else {\n          clearInterval(this.resendInterval);\n        }\n      }, 1000);\n    }\n  },\n  beforeDestroy() {\n    if (this.resendInterval) {\n      clearInterval(this.resendInterval);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","email","password","otpCode","newPassword","confirmNewPassword","error","isLoading","showForgotPassword","showResetPassword","resendTimer","resendInterval","methods","handleLogin","response","post","status","localStorage","setItem","JSON","stringify","user","token","$router","push","err","console","message","handleForgotPassword","startResendTimer","alert","handleResetPassword","length","otp","resetForm","cancelReset","clearInterval","resendOTP","setInterval","beforeDestroy"],"sources":["C:\\laragon\\www\\Abas-Adeva-Final-project-Appdevvv\\project_appdev\\Frontend\\src\\views\\loginview.vue"],"sourcesContent":["<template>\n  <div class=\"auth-page\">\n    <div class=\"auth-container\">\n      <div class=\"auth-card\">\n        <div class=\"brand-section\">\n          <h1 class=\"brand\">Margatheo Store</h1>\n          <p class=\"tagline\">Welcome back! Please login to your account.</p>\n        </div>\n\n        <form @submit.prevent=\"handleLogin\" class=\"auth-form\" v-if=\"!showForgotPassword && !showResetPassword\">\n          <div class=\"form-group\">\n            <label for=\"email\">Email Address</label>\n            <div class=\"input-wrapper\">\n              <span class=\"input-icon\">📧</span>\n              <input\n                type=\"email\"\n                id=\"email\"\n                v-model=\"email\"\n                required\n                placeholder=\"Enter your email\"\n                autocomplete=\"email\"\n              />\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <div class=\"input-wrapper\">\n              <span class=\"input-icon\">🔒</span>\n              <input\n                type=\"password\"\n                id=\"password\"\n                v-model=\"password\"\n                required\n                placeholder=\"Enter your password\"\n                autocomplete=\"current-password\"\n              />\n            </div>\n            <button type=\"button\" @click=\"showForgotPassword = true\" class=\"forgot-password-link\">\n              Forgot Password?\n            </button>\n          </div>\n\n          <div v-if=\"error\" class=\"error-message\">\n            {{ error }}\n          </div>\n\n          <button type=\"submit\" class=\"auth-button\" :disabled=\"isLoading\">\n            {{ isLoading ? 'Logging in...' : 'Login' }}\n          </button>\n\n          <p class=\"auth-link\">\n            Don't have an account? \n            <router-link to=\"/signup\" class=\"link\">Sign up here</router-link>\n          </p>\n        </form>\n\n        <!-- Forgot Password Form -->\n        <form @submit.prevent=\"handleForgotPassword\" class=\"auth-form\" v-if=\"showForgotPassword && !showResetPassword\">\n          <div class=\"form-group\">\n            <h3 class=\"form-subtitle\">Reset Password</h3>\n            <p class=\"form-description\">Enter your email address and we'll send you an OTP to reset your password.</p>\n            <div class=\"input-wrapper\">\n              <span class=\"input-icon\">📧</span>\n              <input\n                type=\"email\"\n                id=\"reset-email\"\n                v-model=\"email\"\n                required\n                placeholder=\"Enter your email\"\n                autocomplete=\"email\"\n              />\n            </div>\n          </div>\n\n          <div v-if=\"error\" class=\"error-message\">\n            {{ error }}\n          </div>\n\n          <button type=\"submit\" class=\"auth-button\" :disabled=\"isLoading\">\n            {{ isLoading ? 'Sending OTP...' : 'Send Reset OTP' }}\n          </button>\n\n          <button type=\"button\" @click=\"cancelReset\" class=\"back-button\">\n            Back to Login\n          </button>\n        </form>\n\n        <!-- Reset Password Form -->\n        <form @submit.prevent=\"handleResetPassword\" class=\"auth-form\" v-if=\"showResetPassword\">\n          <div class=\"form-group\">\n            <h3 class=\"form-subtitle\">Enter OTP</h3>\n            <p class=\"form-description\">Enter the OTP sent to your email and your new password.</p>\n            <div class=\"input-wrapper\">\n              <span class=\"input-icon\">🔢</span>\n              <input\n                type=\"text\"\n                id=\"reset-otp\"\n                v-model=\"otpCode\"\n                required\n                placeholder=\"Enter 6-digit OTP\"\n                maxlength=\"6\"\n                pattern=\"[0-9]{6}\"\n                inputmode=\"numeric\"\n              />\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <div class=\"input-wrapper\">\n              <span class=\"input-icon\">🔒</span>\n              <input\n                type=\"password\"\n                id=\"new-password\"\n                v-model=\"newPassword\"\n                required\n                placeholder=\"Enter new password\"\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <div class=\"input-wrapper\">\n              <span class=\"input-icon\">🔐</span>\n              <input\n                type=\"password\"\n                id=\"confirm-new-password\"\n                v-model=\"confirmNewPassword\"\n                required\n                placeholder=\"Confirm new password\"\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </div>\n\n          <div v-if=\"error\" class=\"error-message\">\n            {{ error }}\n          </div>\n\n          <button type=\"submit\" class=\"auth-button\" :disabled=\"isLoading\">\n            {{ isLoading ? 'Resetting Password...' : 'Reset Password' }}\n          </button>\n\n          <button type=\"button\" @click=\"resendOTP\" class=\"resend-button\" :disabled=\"isLoading || resendTimer > 0\">\n            {{ resendTimer > 0 ? `Resend OTP in ${resendTimer}s` : 'Resend OTP' }}\n          </button>\n\n          <button type=\"button\" @click=\"cancelReset\" class=\"back-button\">\n            Back to Login\n          </button>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'LoginView',\n  data() {\n    return {\n      email: '',\n      password: '',\n      otpCode: '',\n      newPassword: '',\n      confirmNewPassword: '',\n      error: null,\n      isLoading: false,\n      showForgotPassword: false,\n      showResetPassword: false,\n      resendTimer: 0,\n      resendInterval: null\n    }\n  },\n\n  methods: {\n    async handleLogin() {\n      if (!this.email || !this.password) {\n        this.error = \"Please fill in all fields\";\n        return;\n      }\n\n      this.isLoading = true;\n      this.error = null;\n\n      try {\n        const response = await axios.post('http://localhost:5555/login', {\n          email: this.email,\n          password: this.password\n        });\n\n        if (response.status === 200) {\n          // Store user data and token\n          localStorage.setItem('user', JSON.stringify(response.data.user));\n          localStorage.setItem('token', response.data.token);\n          \n          // Redirect to home page\n          this.$router.push('/');\n        }\n      } catch (err) {\n        console.error('Login error:', err);\n        this.error = err.response?.data?.message || \"Login failed. Please try again.\";\n      } finally {\n        this.isLoading = false;\n      }\n    },\n\n    async handleForgotPassword() {\n      if (!this.email) {\n        this.error = \"Please enter your email address\";\n        return;\n      }\n\n      this.isLoading = true;\n      this.error = null;\n\n      try {\n        const response = await axios.post('http://localhost:5555/forgot-password', {\n          email: this.email\n        });\n\n        if (response.status === 200) {\n          this.showForgotPassword = false;\n          this.showResetPassword = true;\n          this.startResendTimer();\n          alert('OTP has been sent to your email.');\n        }\n      } catch (err) {\n        console.error('Forgot password error:', err);\n        this.error = err.response?.data?.message || \"Failed to send reset OTP. Please try again.\";\n      } finally {\n        this.isLoading = false;\n      }\n    },\n\n    async handleResetPassword() {\n      if (!this.otpCode || !this.newPassword || !this.confirmNewPassword) {\n        this.error = \"Please fill in all fields\";\n        return;\n      }\n\n      if (this.newPassword !== this.confirmNewPassword) {\n        this.error = \"Passwords do not match\";\n        return;\n      }\n\n      if (this.newPassword.length < 6) {\n        this.error = \"Password must be at least 6 characters long\";\n        return;\n      }\n\n      this.isLoading = true;\n      this.error = null;\n\n      try {\n        const response = await axios.post('http://localhost:5555/reset-password', {\n          email: this.email,\n          otp: this.otpCode,\n          newPassword: this.newPassword\n        });\n\n        if (response.status === 200) {\n          alert('Password has been reset successfully. You can now login with your new password.');\n          this.resetForm();\n          this.showResetPassword = false;\n        }\n      } catch (err) {\n        console.error('Reset password error:', err);\n        this.error = err.response?.data?.message || \"Failed to reset password. Please try again.\";\n      } finally {\n        this.isLoading = false;\n      }\n    },\n\n    resetForm() {\n      this.password = '';\n      this.otpCode = '';\n      this.newPassword = '';\n      this.confirmNewPassword = '';\n      this.error = null;\n    },\n\n    cancelReset() {\n      this.resetForm();\n      this.email = '';\n      this.showForgotPassword = false;\n      this.showResetPassword = false;\n      if (this.resendInterval) {\n        clearInterval(this.resendInterval);\n      }\n      this.resendTimer = 0;\n    },\n\n    async resendOTP() {\n      this.isLoading = true;\n      this.error = null;\n\n      try {\n        const response = await axios.post('http://localhost:5555/forgot-password', {\n          email: this.email\n        });\n\n        if (response.status === 200) {\n          alert('New OTP has been sent to your email.');\n          this.startResendTimer();\n        }\n      } catch (err) {\n        console.error('Resend OTP error:', err);\n        this.error = err.response?.data?.message || \"Failed to resend OTP. Please try again.\";\n      } finally {\n        this.isLoading = false;\n      }\n    },\n\n    startResendTimer() {\n      this.resendTimer = 60;\n      if (this.resendInterval) {\n        clearInterval(this.resendInterval);\n      }\n      this.resendInterval = setInterval(() => {\n        if (this.resendTimer > 0) {\n          this.resendTimer--;\n        } else {\n          clearInterval(this.resendInterval);\n        }\n      }, 1000);\n    }\n  },\n\n  beforeDestroy() {\n    if (this.resendInterval) {\n      clearInterval(this.resendInterval);\n    }\n  }\n}\n</script>\n\n<style scoped>\n.auth-page {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #f5f7fa 0%, #e4e8f0 100%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem;\n  font-family: \"Poppins\", sans-serif;\n}\n\n.auth-container {\n  width: 100%;\n  max-width: 440px;\n}\n\n.auth-card {\n  background: white;\n  border-radius: 20px;\n  padding: 2.5rem;\n  box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);\n  position: relative;\n}\n\n.auth-card::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 4px;\n  background: linear-gradient(90deg, #4f46e5, #7c3aed);\n  border-radius: 20px 20px 0 0;\n}\n\n.brand-section {\n  text-align: center;\n  margin-bottom: 2rem;\n}\n\n.brand {\n  font-size: 2rem;\n  font-weight: 700;\n  background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  margin-bottom: 0.5rem;\n}\n\n.tagline {\n  color: #64748b;\n  font-size: 0.95rem;\n}\n\n.auth-form {\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.form-group label {\n  font-weight: 600;\n  color: #1a202c;\n  font-size: 0.95rem;\n}\n\n.input-wrapper {\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n\n.input-icon {\n  position: absolute;\n  left: 1rem;\n  font-size: 1.2rem;\n}\n\ninput {\n  width: 100%;\n  padding: 0.75rem 1rem 0.75rem 3rem;\n  border: 2px solid #e2e8f0;\n  border-radius: 12px;\n  font-size: 1rem;\n  color: #1a202c;\n  transition: all 0.3s ease;\n  background: #f8fafc;\n}\n\ninput:focus {\n  border-color: #4f46e5;\n  box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);\n  outline: none;\n}\n\n.auth-button {\n  background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);\n  color: white;\n  padding: 1rem;\n  border: none;\n  border-radius: 12px;\n  font-weight: 600;\n  font-size: 1.1rem;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  margin-top: 1rem;\n}\n\n.auth-button:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 6px -1px rgba(79, 70, 229, 0.2);\n}\n\n.auth-link {\n  text-align: center;\n  color: #64748b;\n  font-size: 0.95rem;\n  margin-top: 1rem;\n}\n\n.link {\n  color: #4f46e5;\n  text-decoration: none;\n  font-weight: 600;\n  transition: color 0.3s ease;\n}\n\n.link:hover {\n  color: #7c3aed;\n}\n\n.otp-hint {\n  color: #64748b;\n  font-size: 0.875rem;\n  margin-top: 0.5rem;\n  text-align: center;\n}\n\n.resend-button {\n  background: transparent;\n  border: none;\n  color: #4f46e5;\n  padding: 0.5rem;\n  margin-top: 1rem;\n  cursor: pointer;\n  font-weight: 600;\n  transition: all 0.3s ease;\n}\n\n.resend-button:hover:not(:disabled) {\n  color: #7c3aed;\n  text-decoration: underline;\n}\n\n.resend-button:disabled {\n  color: #94a3b8;\n  cursor: not-allowed;\n}\n\n.forgot-password-link {\n  color: #4f46e5;\n  font-size: 0.875rem;\n  text-align: right;\n  background: none;\n  border: none;\n  padding: 0;\n  cursor: pointer;\n  display: block;\n  margin-left: auto;\n  margin-top: 0.5rem;\n  transition: color 0.3s ease;\n}\n\n.forgot-password-link:hover {\n  color: #7c3aed;\n  text-decoration: underline;\n}\n\n.back-button {\n  background: transparent;\n  border: none;\n  color: #64748b;\n  padding: 0.5rem;\n  margin-top: 1rem;\n  cursor: pointer;\n  font-weight: 500;\n  transition: all 0.3s ease;\n  width: 100%;\n}\n\n.back-button:hover {\n  color: #1a202c;\n}\n\n.form-subtitle {\n  color: #1a202c;\n  font-size: 1.25rem;\n  font-weight: 600;\n  margin-bottom: 0.5rem;\n  text-align: center;\n}\n\n.form-description {\n  color: #64748b;\n  font-size: 0.875rem;\n  text-align: center;\n  margin-bottom: 1.5rem;\n}\n\n@media (max-width: 640px) {\n  .auth-page {\n    padding: 1rem;\n  }\n\n  .auth-card {\n    padding: 2rem;\n  }\n\n  .brand {\n    font-size: 1.75rem;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}