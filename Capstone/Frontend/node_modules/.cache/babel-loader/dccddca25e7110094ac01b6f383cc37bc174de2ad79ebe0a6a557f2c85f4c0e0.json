{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card\"\n};\nconst _hoisted_2 = {\n  class: \"card-body\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_BarChart = _resolveComponent(\"BarChart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n    class: \"card-header\"\n  }, [_createElementVNode(\"h5\", null, \"Stock Changes Over Time by Product\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Render the chart only when chartData is ready \"), $data.chartData && $data.chartData.labels.length ? (_openBlock(), _createBlock(_component_BarChart, {\n    key: 0,\n    data: $data.chartData,\n    options: $data.chartOptions,\n    class: \"chart-small\"\n  }, null, 8 /* PROPS */, [\"data\", \"options\"])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"Loading chart data...\"))])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","$data","chartData","labels","length","_createBlock","_component_BarChart","data","options","chartOptions","_hoisted_3"],"sources":["C:\\laragon\\www\\Abas-Adeva-Final-project-Appdevvv\\project_appdev\\Frontend\\src\\views\\ProductStockChart.vue"],"sourcesContent":["<template>\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">\r\n        <h5>Stock Changes Over Time by Product</h5>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <!-- Render the chart only when chartData is ready -->\r\n        <BarChart v-if=\"chartData && chartData.labels.length\" :data=\"chartData\" :options=\"chartOptions\"\r\n          class=\"chart-small\" />\r\n        <p v-else>Loading chart data...</p>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { Bar } from 'vue-chartjs';\r\n  import {\r\n    Chart as ChartJS,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    BarElement,\r\n    CategoryScale,\r\n    LinearScale,\r\n  } from 'chart.js';\r\n  \r\n  ChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\r\n  \r\n  export default {\r\n    components: {\r\n      BarChart: Bar,\r\n    },\r\n    data() {\r\n      return {\r\n        chartData: {\r\n          labels: [], // Product names\r\n          datasets: [\r\n            {\r\n              label: 'Stock',\r\n              data: [], // Stock values\r\n              backgroundColor: '#007bff',\r\n            },\r\n          ],\r\n        },\r\n        chartOptions: {\r\n          responsive: true,\r\n          plugins: {\r\n            legend: {\r\n              display: true,\r\n              position: 'top',\r\n            },\r\n          },\r\n        },\r\n      };\r\n    },\r\n    async mounted() {\r\n      try {\r\n        const response = await fetch('http://localhost:5555/products/stock-overview');\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        console.log('Fetched data:', data); // Check the response content\r\n  \r\n        if (data && Array.isArray(data.stockOverview)) {\r\n          this.chartData.labels = data.stockOverview.map(product => product.name);\r\n          this.chartData.datasets[0].data = data.stockOverview.map(product => product.stock);\r\n        } else {\r\n          console.error(\"Expected stockOverview to be an array:\", data);\r\n          this.chartData.labels = [];\r\n          this.chartData.datasets[0].data = [];\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch product stock data:', error);\r\n        // Set default values to avoid crashing the component\r\n        this.chartData.labels = [];\r\n        this.chartData.datasets[0].data = [];\r\n      }\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAM;;EAIVA,KAAK,EAAC;AAAW;;EAL5BC,GAAA;AAAA;;;uBACIC,mBAAA,CAUM,OAVNC,UAUM,G,0BATJC,mBAAA,CAEM;IAFDJ,KAAK,EAAC;EAAa,IACtBI,mBAAA,CAA2C,YAAvC,oCAAkC,E,sBAExCA,mBAAA,CAKM,OALNC,UAKM,GAJJC,mBAAA,mDAAsD,EACtCC,KAAA,CAAAC,SAAS,IAAID,KAAA,CAAAC,SAAS,CAACC,MAAM,CAACC,MAAM,I,cAApDC,YAAA,CACwBC,mBAAA;IARhCX,GAAA;IAO+DY,IAAI,EAAEN,KAAA,CAAAC,SAAS;IAAGM,OAAO,EAAEP,KAAA,CAAAQ,YAAY;IAC5Ff,KAAK,EAAC;iEACRE,mBAAA,CAAmC,KAT3Cc,UAAA,EASkB,uBAAqB,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}