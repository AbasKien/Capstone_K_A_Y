{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card\"\n};\nconst _hoisted_2 = {\n  class: \"card-body\"\n};\nconst _hoisted_3 = {\n  class: \"table-responsive\"\n};\nconst _hoisted_4 = {\n  class: \"table\"\n};\nconst _hoisted_5 = {\n  class: \"input-group\"\n};\nconst _hoisted_6 = [\"onUpdate:modelValue\"];\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_BarChart = _resolveComponent(\"BarChart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n    class: \"card-header\"\n  }, [_createElementVNode(\"h5\", null, \"Product Stock Overview\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"table\", _hoisted_4, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Product\"), _createElementVNode(\"th\", null, \"Current Stock\"), _createElementVNode(\"th\", null, \"Action\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.products, product => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: product.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(product.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(product.stock), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"number\",\n      class: \"form-control form-control-sm\",\n      \"onUpdate:modelValue\": $event => product.newQuantity = $event,\n      min: \"1\"\n    }, null, 8 /* PROPS */, _hoisted_6), [[_vModelText, product.newQuantity]]), _createElementVNode(\"button\", {\n      class: \"btn btn-primary btn-sm\",\n      onClick: $event => $options.updateQuantity(product.id, product.newQuantity)\n    }, \" Update \", 8 /* PROPS */, _hoisted_7)])])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]), _createCommentVNode(\" Chart \"), $data.chartData && $data.chartData.labels.length ? (_openBlock(), _createBlock(_component_BarChart, {\n    key: 0,\n    data: $data.chartData,\n    options: $data.chartOptions,\n    class: \"chart-small mt-4\"\n  }, null, 8 /* PROPS */, [\"data\", \"options\"])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_8, \"Loading chart data...\"))])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$data","products","product","id","_toDisplayString","name","stock","_hoisted_5","type","$event","newQuantity","min","_hoisted_6","onClick","$options","updateQuantity","_hoisted_7","_createCommentVNode","chartData","labels","length","_createBlock","_component_BarChart","data","options","chartOptions","_hoisted_8"],"sources":["C:\\laragon\\www\\Abas-Adeva-Final-project-Appdevvv\\project_appdev\\Frontend\\src\\views\\ProductStockChart.vue"],"sourcesContent":["<template>\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h5>Product Stock Overview</h5>\n    </div>\n    <div class=\"card-body\">\n      <div class=\"table-responsive\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>Product</th>\n              <th>Current Stock</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"product in products\" :key=\"product.id\">\n              <td>{{ product.name }}</td>\n              <td>{{ product.stock }}</td>\n              <td>\n                <div class=\"input-group\">\n                  <input \n                    type=\"number\" \n                    class=\"form-control form-control-sm\" \n                    v-model=\"product.newQuantity\"\n                    min=\"1\"\n                  >\n                  <button \n                    class=\"btn btn-primary btn-sm\" \n                    @click=\"updateQuantity(product.id, product.newQuantity)\"\n                  >\n                    Update\n                  </button>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      \n      <!-- Chart -->\n      <BarChart \n        v-if=\"chartData && chartData.labels.length\" \n        :data=\"chartData\" \n        :options=\"chartOptions\"\n        class=\"chart-small mt-4\" \n      />\n      <p v-else>Loading chart data...</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Bar } from 'vue-chartjs';\nimport axios from 'axios';\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale,\n} from 'chart.js';\n\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n\nexport default {\n  components: {\n    BarChart: Bar,\n  },\n  data() {\n    return {\n      products: [],\n      chartData: {\n        labels: [],\n        datasets: [{\n          label: 'Stock',\n          data: [],\n          backgroundColor: '#007bff',\n        }],\n      },\n      chartOptions: {\n        responsive: true,\n        plugins: {\n          legend: {\n            display: true,\n            position: 'top',\n          },\n        },\n      },\n    };\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        const response = await axios.get('http://localhost:5555/products/stock-overview', {\n          withCredentials: true\n        });\n        if (response.data && Array.isArray(response.data.stockOverview)) {\n          this.products = response.data.stockOverview.map(product => ({\n            ...product,\n            newQuantity: product.stock // Initialize newQuantity with current stock\n          }));\n          this.updateChartData();\n        }\n      } catch (error) {\n        console.error('Failed to fetch product stock data:', error);\n      }\n    },\n    \n    updateChartData() {\n      this.chartData.labels = this.products.map(product => product.name);\n      this.chartData.datasets[0].data = this.products.map(product => product.stock);\n    },\n\n    async updateQuantity(productId, quantity) {\n      try {\n        const response = await axios.patch(\n          `http://localhost:5555/products/${productId}/quantity`,\n          { quantity: parseInt(quantity) },\n          { \n            withCredentials: true,\n            headers: { 'Content-Type': 'application/json' }\n          }\n        );\n        \n        if (response.data.success) {\n          // Refresh the product list\n          await this.fetchProducts();\n          // Show success message\n          alert('Stock updated successfully');\n        }\n      } catch (error) {\n        console.error('Error updating quantity:', error);\n        alert(error.response?.data?.message || 'Failed to update stock');\n      }\n    }\n  },\n  async mounted() {\n    await this.fetchProducts();\n  }\n};\n</script>\n\n<style scoped>\n.chart-small {\n  max-height: 400px;\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAM;;EAIVA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAkB;;EACpBA,KAAK,EAAC;AAAO;;EAaPA,KAAK,EAAC;AAAa;mBApBxC;mBAAA;;EAAAC,GAAA;AAAA;;;uBACEC,mBAAA,CAgDM,OAhDNC,UAgDM,G,0BA/CJC,mBAAA,CAEM;IAFDJ,KAAK,EAAC;EAAa,IACtBI,mBAAA,CAA+B,YAA3B,wBAAsB,E,sBAE5BA,mBAAA,CA2CM,OA3CNC,UA2CM,GA1CJD,mBAAA,CAgCM,OAhCNE,UAgCM,GA/BJF,mBAAA,CA8BQ,SA9BRG,UA8BQ,G,0BA7BNH,mBAAA,CAMQ,gBALNA,mBAAA,CAIK,aAHHA,mBAAA,CAAgB,YAAZ,SAAO,GACXA,mBAAA,CAAsB,YAAlB,eAAa,GACjBA,mBAAA,CAAe,YAAX,QAAM,E,wBAGdA,mBAAA,CAqBQ,iB,kBApBNF,mBAAA,CAmBKM,SAAA,QAnCjBC,WAAA,CAgBkCC,KAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAlBV,mBAAA,CAmBK;MAnB4BD,GAAG,EAAEW,OAAO,CAACC;QAC5CT,mBAAA,CAA2B,YAAAU,gBAAA,CAApBF,OAAO,CAACG,IAAI,kBACnBX,mBAAA,CAA4B,YAAAU,gBAAA,CAArBF,OAAO,CAACI,KAAK,kBACpBZ,mBAAA,CAeK,aAdHA,mBAAA,CAaM,OAbNa,UAaM,G,gBAZJb,mBAAA,CAKC;MAJCc,IAAI,EAAC,QAAQ;MACblB,KAAK,EAAC,8BAA8B;MAvBxD,uBAAAmB,MAAA,IAwB6BP,OAAO,CAACQ,WAAW,GAAAD,MAAA;MAC5BE,GAAG,EAAC;4BAzBxBC,UAAA,I,cAwB6BV,OAAO,CAACQ,WAAW,E,GAG9BhB,mBAAA,CAKS;MAJPJ,KAAK,EAAC,wBAAwB;MAC7BuB,OAAK,EAAAJ,MAAA,IAAEK,QAAA,CAAAC,cAAc,CAACb,OAAO,CAACC,EAAE,EAAED,OAAO,CAACQ,WAAW;OACvD,UAED,iBAhClBM,UAAA,E;wCAwCMC,mBAAA,WAAc,EAENjB,KAAA,CAAAkB,SAAS,IAAIlB,KAAA,CAAAkB,SAAS,CAACC,MAAM,CAACC,MAAM,I,cAD5CC,YAAA,CAKEC,mBAAA;IA9CR/B,GAAA;IA2CSgC,IAAI,EAAEvB,KAAA,CAAAkB,SAAS;IACfM,OAAO,EAAExB,KAAA,CAAAyB,YAAY;IACtBnC,KAAK,EAAC;iEAERE,mBAAA,CAAmC,KA/CzCkC,UAAA,EA+CgB,uBAAqB,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}