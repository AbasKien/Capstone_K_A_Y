{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport axios from 'axios';\n\n// src/main.js or src/main.ts\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Configure axios defaults\naxios.defaults.baseURL = 'http://localhost:5555';\naxios.defaults.withCredentials = true;\naxios.defaults.headers.common['Content-Type'] = 'application/json';\n\n// Add axios request interceptor\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Add axios response interceptor\naxios.interceptors.response.use(response => response, error => {\n  if (error.response && (error.response.status === 401 || error.response.status === 403)) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userRole');\n    router.push('/login');\n  }\n  return Promise.reject(error);\n});\nconst app = createApp(App);\napp.use(router);\napp.mount('#app');","map":{"version":3,"names":["createApp","App","router","axios","defaults","baseURL","withCredentials","headers","common","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","status","removeItem","push","Promise","reject","app","mount"],"sources":["C:/laragon/www/Abas-Adeva-Final-project-Appdevvv/project_appdev/Frontend/src/main.js"],"sourcesContent":["import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport axios from 'axios'\n\n// src/main.js or src/main.ts\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Configure axios defaults\naxios.defaults.baseURL = 'http://localhost:5555'\naxios.defaults.withCredentials = true\naxios.defaults.headers.common['Content-Type'] = 'application/json'\n\n// Add axios request interceptor\naxios.interceptors.request.use(config => {\n    const token = localStorage.getItem('token')\n    if (token) {\n        config.headers.Authorization = `Bearer ${token}`\n    }\n    return config\n})\n\n// Add axios response interceptor\naxios.interceptors.response.use(\n    response => response,\n    error => {\n        if (error.response && (error.response.status === 401 || error.response.status === 403)) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('userRole')\n            router.push('/login')\n        }\n        return Promise.reject(error)\n    }\n)\n\nconst app = createApp(App)\napp.use(router)\napp.mount('#app')\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,sCAAsC;;AAE7C;AACAA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAG,uBAAuB;AAChDF,KAAK,CAACC,QAAQ,CAACE,eAAe,GAAG,IAAI;AACrCH,KAAK,CAACC,QAAQ,CAACG,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC,GAAG,kBAAkB;;AAElE;AACAL,KAAK,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACL,OAAO,CAACS,aAAa,GAAG,UAAUH,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,CAAC;;AAEF;AACAT,KAAK,CAACM,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAC3BM,QAAQ,IAAIA,QAAQ,EACpBC,KAAK,IAAI;EACL,IAAIA,KAAK,CAACD,QAAQ,KAAKC,KAAK,CAACD,QAAQ,CAACE,MAAM,KAAK,GAAG,IAAID,KAAK,CAACD,QAAQ,CAACE,MAAM,KAAK,GAAG,CAAC,EAAE;IACpFL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;IAChCN,YAAY,CAACM,UAAU,CAAC,UAAU,CAAC;IACnClB,MAAM,CAACmB,IAAI,CAAC,QAAQ,CAAC;EACzB;EACA,OAAOC,OAAO,CAACC,MAAM,CAACL,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,MAAMM,GAAG,GAAGxB,SAAS,CAACC,GAAG,CAAC;AAC1BuB,GAAG,CAACb,GAAG,CAACT,MAAM,CAAC;AACfsB,GAAG,CAACC,KAAK,CAAC,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}