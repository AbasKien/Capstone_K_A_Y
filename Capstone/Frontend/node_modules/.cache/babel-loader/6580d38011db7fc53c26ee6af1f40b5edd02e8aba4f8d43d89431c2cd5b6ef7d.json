{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card\"\n};\nconst _hoisted_2 = {\n  class: \"card-body\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_LineChart = _resolveComponent(\"LineChart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n    class: \"card-header\"\n  }, [_createElementVNode(\"h5\", null, \"Sales Performance Over Time\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Render the chart only when chartData is ready \"), $data.chartData && $data.chartData.labels.length ? (_openBlock(), _createBlock(_component_LineChart, {\n    key: 0,\n    data: $data.chartData,\n    options: $data.chartOptions\n  }, null, 8 /* PROPS */, [\"data\", \"options\"])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"Loading chart data...\"))])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","$data","chartData","labels","length","_createBlock","_component_LineChart","data","options","chartOptions","_hoisted_3"],"sources":["C:\\laragon\\www\\Abas-Adeva-Final-project-Appdevvv\\project_appdev\\Frontend\\src\\views\\SalesPerformanceChart.vue"],"sourcesContent":["<template>\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">\r\n        <h5>Sales Performance Over Time</h5>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <!-- Render the chart only when chartData is ready -->\r\n        <LineChart v-if=\"chartData && chartData.labels.length\" :data=\"chartData\" :options=\"chartOptions\" />\r\n        <p v-else>Loading chart data...</p>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { Line } from 'vue-chartjs';\r\n  import {\r\n    Chart as ChartJS,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    LineElement,\r\n    PointElement,\r\n    CategoryScale,\r\n    LinearScale,\r\n  } from 'chart.js';\r\n  \r\n  ChartJS.register(Title, Tooltip, Legend, LineElement, PointElement, CategoryScale, LinearScale);\r\n  \r\n  export default {\r\n    components: { LineChart: Line },\r\n    data() {\r\n      return {\r\n        chartData: {\r\n          labels: [], // Time labels (e.g., dates)\r\n          datasets: [{\r\n            label: 'Total Sales',\r\n            data: [],\r\n            borderColor: 'rgb(75, 192, 192)',\r\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n            fill: false,\r\n          }],\r\n        },\r\n        chartOptions: {\r\n          responsive: true,\r\n          plugins: {\r\n            legend: {\r\n              display: true,\r\n              position: 'top',\r\n            },\r\n          },\r\n          scales: {\r\n            x: {\r\n              title: {\r\n                display: true,\r\n                text: 'Date',\r\n              },\r\n            },\r\n            y: {\r\n              title: {\r\n                display: true,\r\n                text: 'Total Sales',\r\n              },\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        },\r\n      };\r\n    },\r\n    async mounted() {\r\n      try {\r\n        const response = await fetch('http://localhost:5555/products/sales-performance');\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        console.log('Fetched sales performance data:', data);\r\n  \r\n        if (data && Array.isArray(data.salesPerformance)) {\r\n          const labels = [];\r\n          const salesData = [];\r\n  \r\n          // Format data for the chart\r\n          data.salesPerformance.forEach(item => {\r\n            labels.push(item.date);\r\n            salesData.push(item.total_sales);\r\n          });\r\n  \r\n          this.chartData.labels = labels;\r\n          this.chartData.datasets[0].data = salesData;\r\n        } else {\r\n          console.error(\"Expected salesPerformance to be an array:\", data);\r\n          this.chartData.labels = [];\r\n          this.chartData.datasets[0].data = [];\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch sales performance data:', error);\r\n        this.chartData.labels = [];\r\n        this.chartData.datasets[0].data = [];\r\n      }\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAM;;EAIVA,KAAK,EAAC;AAAW;;EAL5BC,GAAA;AAAA;;;uBACIC,mBAAA,CASM,OATNC,UASM,G,0BARJC,mBAAA,CAEM;IAFDJ,KAAK,EAAC;EAAa,IACtBI,mBAAA,CAAoC,YAAhC,6BAA2B,E,sBAEjCA,mBAAA,CAIM,OAJNC,UAIM,GAHJC,mBAAA,mDAAsD,EACrCC,KAAA,CAAAC,SAAS,IAAID,KAAA,CAAAC,SAAS,CAACC,MAAM,CAACC,MAAM,I,cAArDC,YAAA,CAAmGC,oBAAA;IAP3GX,GAAA;IAOgEY,IAAI,EAAEN,KAAA,CAAAC,SAAS;IAAGM,OAAO,EAAEP,KAAA,CAAAQ;iEACnFb,mBAAA,CAAmC,KAR3Cc,UAAA,EAQkB,uBAAqB,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}