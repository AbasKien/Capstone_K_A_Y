{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport axios from 'axios';\nimport { Modal } from 'bootstrap';\nexport default {\n  name: 'AdminOrder',\n  data() {\n    return {\n      orders: [],\n      selectedOrder: null,\n      orderItems: [],\n      showModal: false,\n      searchQuery: '',\n      currentPage: 1,\n      itemsPerPage: 10,\n      modal: null,\n      isAdmin: false\n    };\n  },\n  computed: {\n    filteredOrders() {\n      let filtered = this.orders;\n      if (this.searchQuery) {\n        const query = this.searchQuery.toLowerCase();\n        filtered = filtered.filter(order => order.id.toString().includes(query) || order.fullname && order.fullname.toLowerCase().includes(query) || order.contact_number.includes(query) || this.getStatusDisplay(order.status).toLowerCase().includes(query));\n      }\n      return filtered;\n    },\n    totalPages() {\n      return Math.ceil(this.filteredOrders.length / this.itemsPerPage);\n    },\n    paginatedOrders() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.filteredOrders.slice(start, end);\n    },\n    pendingOrders() {\n      return this.orders.filter(order => order.status === 'pending').length;\n    },\n    shippedOrders() {\n      return this.orders.filter(order => order.status === 'ship').length;\n    },\n    toDeliverOrders() {\n      return this.orders.filter(order => order.status === 'delivered').length;\n    },\n    completedOrders() {\n      return this.orders.filter(order => order.status === 'complete').length;\n    },\n    cancelledOrders() {\n      return this.orders.filter(order => order.status === 'cancelled').length;\n    }\n  },\n  methods: {\n    async checkAdminSession() {\n      try {\n        const response = await axios.get('http://localhost:5555/admin/check', {\n          withCredentials: true\n        });\n        this.isAdmin = response.data.isAdmin;\n        return this.isAdmin;\n      } catch (error) {\n        console.error('Admin check error:', error);\n        this.$router.push('/login');\n        return false;\n      }\n    },\n    async fetchOrders() {\n      try {\n        if (!this.isAdmin) {\n          const isAdminUser = await this.checkAdminSession();\n          if (!isAdminUser) return;\n        }\n        console.log('Fetching orders...');\n        const response = await axios.get('http://localhost:5555/admin/orders', {\n          withCredentials: true,\n          headers: {\n            'Cache-Control': 'no-cache',\n            'Pragma': 'no-cache'\n          }\n        });\n        if (response.data.success) {\n          this.orders = response.data.orders.map(order => ({\n            ...order,\n            currentStatus: order.status // Keep track of original status\n          }));\n        }\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n        alert('Error loading orders');\n        if (error.response?.status === 401) {\n          this.$router.push('/login');\n        }\n      }\n    },\n    async updateStatus(orderId, newStatus) {\n      try {\n        const order = this.orders.find(o => o.id === orderId);\n        if (!order) return;\n        const response = await axios.put(`http://localhost:5555/admin/orders/${orderId}/status`, {\n          status: newStatus,\n          items: this.orderItems // Send order items for stock updates\n        }, {\n          withCredentials: true\n        });\n        if (response.data.success) {\n          order.status = newStatus;\n          alert('Order status updated successfully');\n\n          // Refresh order details if status was updated to complete\n          if (newStatus === 'complete') {\n            await this.viewDetails(order);\n          }\n        }\n      } catch (error) {\n        console.error('Error updating status:', error);\n        alert('Failed to update order status');\n\n        // Revert the status in the dropdown\n        const order = this.orders.find(o => o.id === orderId);\n        if (order) {\n          this.$nextTick(() => {\n            order.status = order.currentStatus || 'pending';\n          });\n        }\n      }\n    },\n    async viewDetails(order) {\n      try {\n        console.log('Viewing details for order:', order);\n        if (!this.isAdmin) {\n          const isAdminUser = await this.checkAdminSession();\n          if (!isAdminUser) return;\n        }\n        const response = await axios.get(`http://localhost:5555/admin/orders/${order.id}`, {\n          withCredentials: true\n        });\n        console.log('Response from server:', response.data);\n        if (response.data.success) {\n          this.selectedOrder = order;\n          const orderDetails = response.data.orderDetails[0];\n          console.log('Order details:', orderDetails);\n          console.log('Items before assignment:', orderDetails.items);\n          this.orderItems = orderDetails.items || [];\n          console.log('Items after assignment:', this.orderItems);\n          this.showModal = true;\n        }\n      } catch (error) {\n        console.error('Error fetching order details:', error);\n        console.error('Error response:', error.response?.data);\n        if (error.response?.status === 401) {\n          this.$router.push('/login');\n        } else {\n          alert('Failed to fetch order details');\n        }\n      }\n    },\n    closeModal() {\n      this.showModal = false;\n      this.selectedOrder = null;\n      this.orderItems = [];\n    },\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    getStatusBadgeClass(status) {\n      const classes = {\n        pending: 'bg-warning',\n        ship: 'bg-primary',\n        delivered: 'bg-info',\n        complete: 'bg-success',\n        cancelled: 'bg-danger'\n      };\n      return `badge rounded-pill ${classes[status] || 'bg-secondary'}`;\n    },\n    getStatusDisplay(status) {\n      const display = {\n        pending: 'To Pay',\n        ship: 'To Ship',\n        delivered: 'To Deliver',\n        complete: 'Complete',\n        cancelled: 'Cancelled'\n      };\n      return display[status] || status;\n    },\n    async handleLogout() {\n      try {\n        console.log(\"Logging out...\");\n        // Clear all authentication data first\n        localStorage.clear();\n        await axios.post(\"http://localhost:5555/logout\", {}, {\n          withCredentials: true\n        });\n        await this.$router.push(\"/login\");\n      } catch (error) {\n        console.error(\"Logout failed\", error);\n      }\n    },\n    printOrders() {\n      window.print();\n    },\n    exportToExcel() {\n      // Implementation for Excel export\n      alert('Export to Excel feature coming soon!');\n    }\n  },\n  async created() {\n    const isAdminUser = await this.checkAdminSession();\n    if (isAdminUser) {\n      this.fetchOrders();\n    }\n  },\n  mounted() {\n    this.modal = new Modal(this.$refs.orderModal);\n    // Fetch orders every minute to keep the list updated\n    this.interval = setInterval(() => {\n      if (this.isAdmin) {\n        this.fetchOrders();\n      }\n    }, 60000);\n  },\n  beforeUnmount() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n};","map":{"version":3,"names":["axios","Modal","name","data","orders","selectedOrder","orderItems","showModal","searchQuery","currentPage","itemsPerPage","modal","isAdmin","computed","filteredOrders","filtered","query","toLowerCase","filter","order","id","toString","includes","fullname","contact_number","getStatusDisplay","status","totalPages","Math","ceil","length","paginatedOrders","start","end","slice","pendingOrders","shippedOrders","toDeliverOrders","completedOrders","cancelledOrders","methods","checkAdminSession","response","get","withCredentials","error","console","$router","push","fetchOrders","isAdminUser","log","headers","success","map","currentStatus","alert","updateStatus","orderId","newStatus","find","o","put","items","viewDetails","$nextTick","orderDetails","closeModal","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","hour","minute","getStatusBadgeClass","classes","pending","ship","delivered","complete","cancelled","display","handleLogout","localStorage","clear","post","printOrders","window","print","exportToExcel","created","mounted","$refs","orderModal","interval","setInterval","beforeUnmount","clearInterval"],"sources":["C:\\laragon\\www\\Abas-Adeva-Final-project-Appdevvv\\project_appdev\\Frontend\\src\\views\\AdminOrder.vue"],"sourcesContent":["<template>\n  <div class=\"d-flex\">\n    <!-- Sidebar -->\n    <nav class=\"sidebar bg-dark text-white vh-100 p-3\">\n      <h4 class=\"text-white mb-4\">Admin Dashboard</h4>\n      <ul class=\"nav nav-pills flex-column\">\n        <!-- Dashboard Link -->\n        <li class=\"nav-item\">\n          <router-link to=\"/admin/dashboard\" class=\"nav-link text-white\" active-class=\"active\">\n            <i class=\"fas fa-home me-2\"></i> Dashboard\n          </router-link>\n        </li>\n        \n        <!-- Products Link -->\n        <li class=\"nav-item\">\n          <router-link to=\"/admin/products\" class=\"nav-link text-white\" active-class=\"active\">\n            <i class=\"fas fa-box me-2\"></i> Products\n          </router-link>\n        </li>\n\n        <!-- Product Logs Link -->\n        <li class=\"nav-item\">\n          <router-link to=\"/admin/product-logs\" class=\"nav-link text-white\" active-class=\"active\">\n            <i class=\"fas fa-clipboard-list me-2\"></i> Product Logs\n          </router-link>\n        </li>\n\n        <!-- Orders Link -->\n        <li class=\"nav-item\">\n          <router-link to=\"/admin/orders\" class=\"nav-link text-white\" active-class=\"active\">\n            <i class=\"fas fa-truck me-2\"></i> Orders\n          </router-link>\n        </li>\n\n        <!-- Logout Button -->\n        <li class=\"nav-item mt-auto\">\n          <button @click=\"handleLogout\" class=\"btn btn-danger w-100 mt-3\">\n            <i class=\"fas fa-sign-out-alt me-2\"></i> Logout\n          </button>\n        </li>\n      </ul>\n    </nav>\n\n    <!-- Main Content -->\n    <div class=\"flex-grow-1 p-4 bg-light\">\n      <div class=\"container-fluid\">\n        <!-- Header -->\n        <div class=\"d-flex justify-content-between align-items-center mb-4\">\n          <h2 class=\"mb-0\">\n            <i class=\"fas fa-shopping-cart text-primary me-2\"></i>\n            Order Management\n          </h2>\n          <div class=\"d-flex gap-2\">\n            <button class=\"btn btn-outline-primary\" @click=\"printOrders\">\n              <i class=\"fas fa-print me-2\"></i> Print Orders\n            </button>\n            <button class=\"btn btn-outline-success\" @click=\"exportToExcel\">\n              <i class=\"fas fa-file-excel me-2\"></i> Export to Excel\n            </button>\n          </div>\n        </div>\n\n        <!-- Order Statistics Cards -->\n        <div class=\"row g-4 mb-4\">\n          <div class=\"col-md\">\n            <div class=\"card border-0 shadow-sm bg-gradient h-100\">\n              <div class=\"card-body d-flex align-items-center\">\n                <div class=\"rounded-circle p-3 bg-warning bg-opacity-10 me-3\">\n                  <i class=\"fas fa-clock text-warning fa-2x\"></i>\n                </div>\n                <div>\n                  <h6 class=\"card-title mb-0 text-warning\">To Pay</h6>\n                  <h2 class=\"mt-2 mb-0\">{{ pendingOrders }}</h2>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-md\">\n            <div class=\"card border-0 shadow-sm bg-gradient h-100\">\n              <div class=\"card-body d-flex align-items-center\">\n                <div class=\"rounded-circle p-3 bg-primary bg-opacity-10 me-3\">\n                  <i class=\"fas fa-box text-primary fa-2x\"></i>\n                </div>\n                <div>\n                  <h6 class=\"card-title mb-0 text-primary\">To Ship</h6>\n                  <h2 class=\"mt-2 mb-0\">{{ shippedOrders }}</h2>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-md\">\n            <div class=\"card border-0 shadow-sm bg-gradient h-100\">\n              <div class=\"card-body d-flex align-items-center\">\n                <div class=\"rounded-circle p-3 bg-info bg-opacity-10 me-3\">\n                  <i class=\"fas fa-truck text-info fa-2x\"></i>\n                </div>\n                <div>\n                  <h6 class=\"card-title mb-0 text-info\">To Deliver</h6>\n                  <h2 class=\"mt-2 mb-0\">{{ toDeliverOrders }}</h2>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-md\">\n            <div class=\"card border-0 shadow-sm bg-gradient h-100\">\n              <div class=\"card-body d-flex align-items-center\">\n                <div class=\"rounded-circle p-3 bg-success bg-opacity-10 me-3\">\n                  <i class=\"fas fa-check-circle text-success fa-2x\"></i>\n                </div>\n                <div>\n                  <h6 class=\"card-title mb-0 text-success\">Completed</h6>\n                  <h2 class=\"mt-2 mb-0\">{{ completedOrders }}</h2>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-md\">\n            <div class=\"card border-0 shadow-sm bg-gradient h-100\">\n              <div class=\"card-body d-flex align-items-center\">\n                <div class=\"rounded-circle p-3 bg-danger bg-opacity-10 me-3\">\n                  <i class=\"fas fa-times-circle text-danger fa-2x\"></i>\n                </div>\n                <div>\n                  <h6 class=\"card-title mb-0 text-danger\">Cancelled</h6>\n                  <h2 class=\"mt-2 mb-0\">{{ cancelledOrders }}</h2>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Orders Table Card -->\n        <div class=\"card border-0 shadow-sm\">\n          <div class=\"card-header bg-white py-3\">\n            <div class=\"row align-items-center\">\n              <div class=\"col\">\n                <h5 class=\"mb-0\">Orders List</h5>\n              </div>\n              <div class=\"col-auto\">\n                <div class=\"input-group\">\n                  <span class=\"input-group-text bg-white border-end-0\">\n                    <i class=\"fas fa-search text-muted\"></i>\n                  </span>\n                  <input \n                    type=\"text\" \n                    class=\"form-control border-start-0 ps-0\" \n                    placeholder=\"Search orders...\"\n                    v-model=\"searchQuery\"\n                  >\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"card-body p-0\">\n            <div class=\"table-responsive\">\n              <table class=\"table table-hover mb-0\">\n                <thead class=\"bg-light\">\n                  <tr>\n                    <th class=\"border-0\">Order ID</th>\n                    <th class=\"border-0\">Customer</th>\n                    <th class=\"border-0\">Contact</th>\n                    <th class=\"border-0\">Total Price</th>\n                    <th class=\"border-0\">Status</th>\n                    <th class=\"border-0\">Date</th>\n                    <th class=\"border-0\">Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"order in filteredOrders\" :key=\"order.id\">\n                    <td class=\"align-middle\">#{{ order.id }}</td>\n                    <td class=\"align-middle\">{{ order.fullname || 'Customer' }}</td>\n                    <td class=\"align-middle\">{{ order.contact_number }}</td>\n                    <td class=\"align-middle\">₱{{ parseFloat(order.total_price).toFixed(2) }}</td>\n                    <td class=\"align-middle\">\n                      <span :class=\"getStatusBadgeClass(order.status)\" class=\"badge rounded-pill\">\n                        {{ getStatusDisplay(order.status) }}\n                      </span>\n                    </td>\n                    <td class=\"align-middle\">{{ formatDate(order.created_at) }}</td>\n                    <td class=\"align-middle\">\n                      <div class=\"d-flex gap-2 align-items-center\">\n                        <select \n                          v-model=\"order.status\" \n                          @change=\"updateStatus(order.id, $event.target.value)\"\n                          class=\"form-select form-select-sm\"\n                          style=\"width: auto;\"\n                        >\n                          <option value=\"pending\">To Pay</option>\n                          <option value=\"ship\">To Ship</option>\n                          <option value=\"delivered\">To Deliver</option>\n                          <option value=\"complete\">Complete</option>\n                          <option value=\"cancelled\">Cancelled</option>\n                        </select>\n                        <button \n                          @click=\"viewDetails(order)\"\n                          class=\"btn btn-sm btn-outline-info\"\n                          title=\"View Details\"\n                        >\n                          <i class=\"fas fa-eye\"></i>\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <div class=\"card-footer bg-white\">\n            <div class=\"d-flex justify-content-between align-items-center\">\n              <div>\n                Showing {{ filteredOrders.length }} orders\n              </div>\n              <nav v-if=\"totalPages > 1\">\n                <ul class=\"pagination mb-0\">\n                  <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\n                    <button class=\"page-link\" @click=\"currentPage--\">Previous</button>\n                  </li>\n                  <li v-for=\"page in totalPages\" :key=\"page\" class=\"page-item\" :class=\"{ active: currentPage === page }\">\n                    <button class=\"page-link\" @click=\"currentPage = page\">{{ page }}</button>\n                  </li>\n                  <li class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\n                    <button class=\"page-link\" @click=\"currentPage++\">Next</button>\n                  </li>\n                </ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Order Details Modal -->\n    <div v-if=\"showModal\" class=\"modal fade show\" tabindex=\"-1\" style=\"display: block;\">\n      <div class=\"modal-dialog modal-lg modal-dialog-centered\">\n        <div class=\"modal-content border-0 shadow\">\n          <div class=\"modal-header border-0\">\n            <h5 class=\"modal-title\">\n              <i class=\"fas fa-info-circle text-primary me-2\"></i>\n              Order Details\n            </h5>\n            <button type=\"button\" class=\"btn-close\" @click=\"closeModal\"></button>\n          </div>\n          <div class=\"modal-body\" v-if=\"selectedOrder\">\n            <div class=\"row g-4\">\n              <!-- Customer Information -->\n              <div class=\"col-md-6\">\n                <div class=\"card h-100 border-0 bg-light\">\n                  <div class=\"card-body\">\n                    <h6 class=\"card-title mb-3\">\n                      <i class=\"fas fa-user text-primary me-2\"></i>\n                      Customer Information\n                    </h6>\n                    <p class=\"mb-2\"><strong>Name:</strong> {{ selectedOrder.fullname }}</p>\n                    <p class=\"mb-2\"><strong>Contact:</strong> {{ selectedOrder.contact_number }}</p>\n                    <p class=\"mb-0\"><strong>Address:</strong> {{ selectedOrder.address }}</p>\n                  </div>\n                </div>\n              </div>\n              \n              <!-- Order Information -->\n              <div class=\"col-md-6\">\n                <div class=\"card h-100 border-0 bg-light\">\n                  <div class=\"card-body\">\n                    <h6 class=\"card-title mb-3\">\n                      <i class=\"fas fa-shopping-cart text-primary me-2\"></i>\n                      Order Information\n                    </h6>\n                    <p class=\"mb-2\"><strong>Order ID:</strong> #{{ selectedOrder.id }}</p>\n                    <p class=\"mb-2\">\n                      <strong>Status:</strong>\n                      <span :class=\"getStatusBadgeClass(selectedOrder.status)\" class=\"badge rounded-pill ms-2\">\n                        {{ getStatusDisplay(selectedOrder.status) }}\n                      </span>\n                    </p>\n                    <p class=\"mb-2\"><strong>Payment Method:</strong> Cash on Delivery</p>\n                    <p class=\"mb-0\"><strong>Date:</strong> {{ formatDate(selectedOrder.created_at) }}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Order Items -->\n            <div class=\"card border-0 bg-light mt-4\">\n              <div class=\"card-body\">\n                <h6 class=\"card-title mb-3\">\n                  <i class=\"fas fa-box text-primary me-2\"></i>\n                  Order Items\n                </h6>\n                <div class=\"table-responsive\">\n                  <table class=\"table table-borderless\">\n                    <thead class=\"table-light\">\n                      <tr>\n                        <th>Item</th>\n                        <th class=\"text-end\">Price</th>\n                        <th class=\"text-end\">Quantity</th>\n                        <th class=\"text-end\">Total</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr v-for=\"item in orderItems\" :key=\"item.id\">\n                        <td>{{ item.name }}</td>\n                        <td class=\"text-end\">₱{{ Number(item.price).toFixed(2) }}</td>\n                        <td class=\"text-end\">{{ item.quantity }}</td>\n                        <td class=\"text-end\">₱{{ (Number(item.price) * item.quantity).toFixed(2) }}</td>\n                      </tr>\n                      <tr class=\"fw-bold\">\n                        <td colspan=\"3\" class=\"text-end\">Total:</td>\n                        <td class=\"text-end\">₱{{ Number(selectedOrder.total_price).toFixed(2) }}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- Modal Backdrop -->\n      <div class=\"modal-backdrop fade show\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { Modal } from 'bootstrap';\n\nexport default {\n  name: 'AdminOrder',\n  data() {\n    return {\n      orders: [],\n      selectedOrder: null,\n      orderItems: [],\n      showModal: false,\n      searchQuery: '',\n      currentPage: 1,\n      itemsPerPage: 10,\n      modal: null,\n      isAdmin: false\n    };\n  },\n  computed: {\n    filteredOrders() {\n      let filtered = this.orders;\n      if (this.searchQuery) {\n        const query = this.searchQuery.toLowerCase();\n        filtered = filtered.filter(order => \n          order.id.toString().includes(query) ||\n          (order.fullname && order.fullname.toLowerCase().includes(query)) ||\n          order.contact_number.includes(query) ||\n          this.getStatusDisplay(order.status).toLowerCase().includes(query)\n        );\n      }\n      return filtered;\n    },\n    totalPages() {\n      return Math.ceil(this.filteredOrders.length / this.itemsPerPage);\n    },\n    paginatedOrders() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.filteredOrders.slice(start, end);\n    },\n    pendingOrders() {\n      return this.orders.filter(order => order.status === 'pending').length;\n    },\n    shippedOrders() {\n      return this.orders.filter(order => order.status === 'ship').length;\n    },\n    toDeliverOrders() {\n      return this.orders.filter(order => order.status === 'delivered').length;\n    },\n    completedOrders() {\n      return this.orders.filter(order => order.status === 'complete').length;\n    },\n    cancelledOrders() {\n      return this.orders.filter(order => order.status === 'cancelled').length;\n    }\n  },\n  methods: {\n    async checkAdminSession() {\n      try {\n        const response = await axios.get('http://localhost:5555/admin/check', {\n          withCredentials: true\n        });\n        this.isAdmin = response.data.isAdmin;\n        return this.isAdmin;\n      } catch (error) {\n        console.error('Admin check error:', error);\n        this.$router.push('/login');\n        return false;\n      }\n    },\n\n    async fetchOrders() {\n      try {\n        if (!this.isAdmin) {\n          const isAdminUser = await this.checkAdminSession();\n          if (!isAdminUser) return;\n        }\n\n        console.log('Fetching orders...');\n        const response = await axios.get('http://localhost:5555/admin/orders', {\n          withCredentials: true,\n          headers: {\n            'Cache-Control': 'no-cache',\n            'Pragma': 'no-cache'\n          }\n        });\n        \n        if (response.data.success) {\n          this.orders = response.data.orders.map(order => ({\n            ...order,\n            currentStatus: order.status // Keep track of original status\n          }));\n        }\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n        alert('Error loading orders');\n        if (error.response?.status === 401) {\n          this.$router.push('/login');\n        }\n      }\n    },\n\n    async updateStatus(orderId, newStatus) {\n      try {\n        const order = this.orders.find(o => o.id === orderId);\n        if (!order) return;\n\n        const response = await axios.put(\n          `http://localhost:5555/admin/orders/${orderId}/status`,\n          { \n            status: newStatus,\n            items: this.orderItems // Send order items for stock updates\n          },\n          { withCredentials: true }\n        );\n\n        if (response.data.success) {\n          order.status = newStatus;\n          alert('Order status updated successfully');\n          \n          // Refresh order details if status was updated to complete\n          if (newStatus === 'complete') {\n            await this.viewDetails(order);\n          }\n        }\n      } catch (error) {\n        console.error('Error updating status:', error);\n        alert('Failed to update order status');\n        \n        // Revert the status in the dropdown\n        const order = this.orders.find(o => o.id === orderId);\n        if (order) {\n          this.$nextTick(() => {\n            order.status = order.currentStatus || 'pending';\n          });\n        }\n      }\n    },\n\n    async viewDetails(order) {\n      try {\n        console.log('Viewing details for order:', order);\n        \n        if (!this.isAdmin) {\n          const isAdminUser = await this.checkAdminSession();\n          if (!isAdminUser) return;\n        }\n\n        const response = await axios.get(`http://localhost:5555/admin/orders/${order.id}`, {\n          withCredentials: true\n        });\n        \n        console.log('Response from server:', response.data);\n        \n        if (response.data.success) {\n          this.selectedOrder = order;\n          const orderDetails = response.data.orderDetails[0];\n          console.log('Order details:', orderDetails);\n          console.log('Items before assignment:', orderDetails.items);\n          this.orderItems = orderDetails.items || [];\n          console.log('Items after assignment:', this.orderItems);\n          this.showModal = true;\n        }\n      } catch (error) {\n        console.error('Error fetching order details:', error);\n        console.error('Error response:', error.response?.data);\n        if (error.response?.status === 401) {\n          this.$router.push('/login');\n        } else {\n          alert('Failed to fetch order details');\n        }\n      }\n    },\n    closeModal() {\n      this.showModal = false;\n      this.selectedOrder = null;\n      this.orderItems = [];\n    },\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    getStatusBadgeClass(status) {\n      const classes = {\n        pending: 'bg-warning',\n        ship: 'bg-primary',\n        delivered: 'bg-info',\n        complete: 'bg-success',\n        cancelled: 'bg-danger'\n      };\n      return `badge rounded-pill ${classes[status] || 'bg-secondary'}`;\n    },\n    getStatusDisplay(status) {\n      const display = {\n        pending: 'To Pay',\n        ship: 'To Ship',\n        delivered: 'To Deliver',\n        complete: 'Complete',\n        cancelled: 'Cancelled'\n      };\n      return display[status] || status;\n    },\n    async handleLogout() {\n      try {\n        console.log(\"Logging out...\");\n        // Clear all authentication data first\n        localStorage.clear();\n        await axios.post(\"http://localhost:5555/logout\", {}, { withCredentials: true });\n        await this.$router.push(\"/login\");\n      } catch (error) {\n        console.error(\"Logout failed\", error);\n      }\n    },\n    printOrders() {\n      window.print();\n    },\n\n    exportToExcel() {\n      // Implementation for Excel export\n      alert('Export to Excel feature coming soon!');\n    },\n  },\n  async created() {\n    const isAdminUser = await this.checkAdminSession();\n    if (isAdminUser) {\n      this.fetchOrders();\n    }\n  },\n  mounted() {\n    this.modal = new Modal(this.$refs.orderModal);\n    // Fetch orders every minute to keep the list updated\n    this.interval = setInterval(() => {\n      if (this.isAdmin) {\n        this.fetchOrders();\n      }\n    }, 60000);\n  },\n  beforeUnmount() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.sidebar {\n  width: 250px;\n  transition: all 0.3s;\n}\n\n.bg-gradient {\n  background: linear-gradient(to right, rgba(255,255,255,0.9), rgba(255,255,255,0.95));\n}\n\n.card {\n  transition: transform 0.2s;\n}\n\n.card:hover {\n  transform: translateY(-2px);\n}\n\n.table th {\n  font-weight: 600;\n  text-transform: uppercase;\n  font-size: 0.85rem;\n  letter-spacing: 0.5px;\n}\n\n.modal-backdrop {\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n/* Status Badge Styles */\n.badge {\n  padding: 0.5em 1em;\n  font-weight: 500;\n}\n\n.badge.bg-warning {\n  color: #fff;\n}\n\n/* Hover effects */\n.btn-outline-info:hover {\n  background-color: #0dcaf0;\n  color: white;\n}\n\n/* Table hover effect */\n.table-hover tbody tr:hover {\n  background-color: rgba(0,0,0,.02);\n}\n\n/* Search input styling */\n.input-group .form-control:focus {\n  box-shadow: none;\n  border-color: #ced4da;\n}\n\n.input-group-text {\n  color: #6c757d;\n}\n\n/* Responsive adjustments */\n@media (max-width: 768px) {\n  .sidebar {\n    width: 100%;\n    position: fixed;\n    z-index: 1000;\n  }\n  \n  .card-body {\n    padding: 1rem;\n  }\n  \n  .table {\n    font-size: 0.9rem;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}