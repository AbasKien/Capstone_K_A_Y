{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport { Line } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, LineElement, PointElement, CategoryScale, LinearScale } from 'chart.js';\nChartJS.register(Title, Tooltip, Legend, LineElement, PointElement, CategoryScale, LinearScale);\nexport default {\n  components: {\n    LineChart: Line\n  },\n  data() {\n    return {\n      chartData: {\n        labels: [],\n        datasets: [{\n          label: 'Total Sales',\n          data: [],\n          borderColor: '#3498db',\n          backgroundColor: 'rgba(52, 152, 219, 0.1)',\n          tension: 0.4,\n          borderWidth: 2,\n          fill: true\n        }]\n      },\n      chartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: true,\n            position: 'top'\n          },\n          tooltip: {\n            mode: 'index',\n            intersect: false,\n            callbacks: {\n              label: function (context) {\n                const value = context.parsed.y;\n                return `Total Sales: $${value.toFixed(2)}`;\n              }\n            }\n          }\n        },\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: 'Date'\n            },\n            ticks: {\n              maxRotation: 45,\n              minRotation: 45\n            }\n          },\n          y: {\n            title: {\n              display: true,\n              text: 'Total Sales ($)'\n            },\n            beginAtZero: true,\n            ticks: {\n              callback: function (value) {\n                return '$' + value.toFixed(2);\n              }\n            }\n          }\n        }\n      },\n      pollingInterval: null\n    };\n  },\n  async mounted() {\n    await this.fetchSalesData();\n    // Set up polling to refresh data every minute\n    this.pollingInterval = setInterval(this.fetchSalesData, 60000);\n    // Listen for order completion events\n    window.addEventListener('orderStatusUpdated', this.fetchSalesData);\n  },\n  beforeDestroy() {\n    // Clean up polling interval\n    if (this.pollingInterval) {\n      clearInterval(this.pollingInterval);\n    }\n    // Clean up event listener\n    window.removeEventListener('orderStatusUpdated', this.fetchSalesData);\n  },\n  methods: {\n    async fetchSalesData() {\n      try {\n        // Get the token from localStorage\n        const token = localStorage.getItem('token');\n        if (!token) {\n          console.error('No authentication token found');\n          return;\n        }\n        const response = await fetch('http://localhost:5555/products/sales-performance', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('Fetched sales performance data:', data);\n        if (data.success && Array.isArray(data.salesPerformance)) {\n          // Sort data by date\n          const sortedData = [...data.salesPerformance].sort((a, b) => new Date(a.date) - new Date(b.date));\n\n          // Format dates and prepare data\n          this.chartData.labels = sortedData.map(item => {\n            // Create date object (it will use local timezone)\n            const date = new Date(item.date);\n            // Format date in Manila time (UTC+8)\n            return date.toLocaleDateString('en-US', {\n              month: 'short',\n              day: 'numeric',\n              year: 'numeric',\n              timeZone: 'Asia/Manila'\n            });\n          });\n          this.chartData.datasets[0].data = sortedData.map(item => item.total_sales);\n        }\n      } catch (error) {\n        console.error('Failed to fetch sales performance data:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["Line","Chart","ChartJS","Title","Tooltip","Legend","LineElement","PointElement","CategoryScale","LinearScale","register","components","LineChart","data","chartData","labels","datasets","label","borderColor","backgroundColor","tension","borderWidth","fill","chartOptions","responsive","maintainAspectRatio","plugins","legend","display","position","tooltip","mode","intersect","callbacks","context","value","parsed","y","toFixed","scales","x","title","text","ticks","maxRotation","minRotation","beginAtZero","callback","pollingInterval","mounted","fetchSalesData","setInterval","window","addEventListener","beforeDestroy","clearInterval","removeEventListener","methods","token","localStorage","getItem","console","error","response","fetch","method","headers","credentials","ok","Error","status","json","log","success","Array","isArray","salesPerformance","sortedData","sort","a","b","Date","date","map","item","toLocaleDateString","month","day","year","timeZone","total_sales"],"sources":["C:\\laragon\\www\\Abas-Adeva-Final-project-Appdevvv\\project_appdev\\Frontend\\src\\views\\SalesPerformanceChart.vue"],"sourcesContent":["<template>\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h5>Sales Performance Over Time</h5>\n    </div>\n    <div class=\"card-body\">\n      <LineChart v-if=\"chartData && chartData.labels.length\" :data=\"chartData\" :options=\"chartOptions\" />\n      <p v-else>Loading chart data...</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Line } from 'vue-chartjs';\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  LineElement,\n  PointElement,\n  CategoryScale,\n  LinearScale,\n} from 'chart.js';\n\nChartJS.register(Title, Tooltip, Legend, LineElement, PointElement, CategoryScale, LinearScale);\n\nexport default {\n  components: { LineChart: Line },\n  data() {\n    return {\n      chartData: {\n        labels: [],\n        datasets: [{\n          label: 'Total Sales',\n          data: [],\n          borderColor: '#3498db',\n          backgroundColor: 'rgba(52, 152, 219, 0.1)',\n          tension: 0.4,\n          borderWidth: 2,\n          fill: true,\n        }],\n      },\n      chartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: true,\n            position: 'top',\n          },\n          tooltip: {\n            mode: 'index',\n            intersect: false,\n            callbacks: {\n              label: function(context) {\n                const value = context.parsed.y;\n                return `Total Sales: $${value.toFixed(2)}`;\n              }\n            }\n          }\n        },\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: 'Date',\n            },\n            ticks: {\n              maxRotation: 45,\n              minRotation: 45,\n            }\n          },\n          y: {\n            title: {\n              display: true,\n              text: 'Total Sales ($)',\n            },\n            beginAtZero: true,\n            ticks: {\n              callback: function(value) {\n                return '$' + value.toFixed(2);\n              }\n            }\n          },\n        },\n      },\n      pollingInterval: null,\n    };\n  },\n  async mounted() {\n    await this.fetchSalesData();\n    // Set up polling to refresh data every minute\n    this.pollingInterval = setInterval(this.fetchSalesData, 60000);\n    // Listen for order completion events\n    window.addEventListener('orderStatusUpdated', this.fetchSalesData);\n  },\n  beforeDestroy() {\n    // Clean up polling interval\n    if (this.pollingInterval) {\n      clearInterval(this.pollingInterval);\n    }\n    // Clean up event listener\n    window.removeEventListener('orderStatusUpdated', this.fetchSalesData);\n  },\n  methods: {\n    async fetchSalesData() {\n      try {\n        // Get the token from localStorage\n        const token = localStorage.getItem('token');\n        if (!token) {\n          console.error('No authentication token found');\n          return;\n        }\n\n        const response = await fetch('http://localhost:5555/products/sales-performance', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include'\n        });\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        console.log('Fetched sales performance data:', data);\n\n        if (data.success && Array.isArray(data.salesPerformance)) {\n          // Sort data by date\n          const sortedData = [...data.salesPerformance].sort((a, b) => \n            new Date(a.date) - new Date(b.date)\n          );\n\n          // Format dates and prepare data\n          this.chartData.labels = sortedData.map(item => {\n            // Create date object (it will use local timezone)\n            const date = new Date(item.date);\n            // Format date in Manila time (UTC+8)\n            return date.toLocaleDateString('en-US', {\n              month: 'short',\n              day: 'numeric',\n              year: 'numeric',\n              timeZone: 'Asia/Manila'\n            });\n          });\n          this.chartData.datasets[0].data = sortedData.map(item => item.total_sales);\n        }\n      } catch (error) {\n        console.error('Failed to fetch sales performance data:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.card {\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  margin: 1rem;\n}\n\n.card-header {\n  padding: 1rem;\n  border-bottom: 1px solid #eee;\n}\n\n.card-header h5 {\n  margin: 0;\n  color: #2c3e50;\n  font-weight: 600;\n}\n\n.card-body {\n  padding: 1rem;\n  height: 400px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}