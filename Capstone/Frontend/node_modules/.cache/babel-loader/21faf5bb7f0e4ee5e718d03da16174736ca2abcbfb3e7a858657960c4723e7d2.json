{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { ref, onMounted } from 'vue';\nimport axios from 'axios';\nexport default {\n  setup() {\n    const products = ref([]);\n    const selectedProductLogs = ref([]);\n    const showModal = ref(false);\n\n    // Fetch products with logs from the server\n    const fetchProducts = async () => {\n      try {\n        const response = await axios.get('http://localhost:5555/products-with-logs', {\n          withCredentials: true\n        });\n        products.value = response.data.products || [];\n      } catch (error) {\n        console.error('Error loading products', error);\n      }\n    };\n    const showLogs = async productId => {\n      try {\n        const logs = products.value.filter(product => product.id === productId);\n        selectedProductLogs.value = logs.map(log => ({\n          log_id: log.log_id,\n          previous_quantity: log.previous_quantity,\n          quantity_changed: log.quantity_changed,\n          new_quantity: log.new_quantity,\n          reason: log.reason,\n          created_at: log.created_at\n        }));\n        showModal.value = true;\n        // Initialize DataTables for the modal\n        setTimeout(() => {\n          $('#logsTable').DataTable({\n            responsive: true\n          });\n        }, 500);\n      } catch (error) {\n        console.error('Error loading logs for product', error);\n      }\n    };\n    const closeModal = () => {\n      showModal.value = false;\n      selectedProductLogs.value = [];\n    };\n\n    // Function to print logs\n    const printLogs = () => {\n      const printWindow = window.open('', '_blank');\n      printWindow.document.write('<html><head><title>Print Logs</title></head><body>');\n      printWindow.document.write(document.querySelector('#logsTable').outerHTML);\n      printWindow.document.write('</body></html>');\n      printWindow.document.close();\n      printWindow.print();\n    };\n\n    // Function to download logs as CSV\n    const downloadCSV = () => {\n      if (selectedProductLogs.value.length === 0) {\n        alert('No logs available to download.');\n        return;\n      }\n      const headers = ['ID', 'Previous Quantity', 'Quantity Changed', 'New Quantity', 'Reason', 'Created At'];\n      const rows = selectedProductLogs.value.map(log => [log.log_id, log.previous_quantity, log.quantity_changed, log.new_quantity, log.reason, new Date(log.created_at).toLocaleString()]);\n      let csvContent = 'data:text/csv;charset=utf-8,' + headers.join(',') + '\\n';\n      rows.forEach(row => {\n        csvContent += row.join(',') + '\\n';\n      });\n      const encodedUri = encodeURI(csvContent);\n      const link = document.createElement('a');\n      link.setAttribute('href', encodedUri);\n      link.setAttribute('download', 'product_logs.csv');\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    };\n    onMounted(() => {\n      fetchProducts();\n      // Initialize DataTables for the main table\n      setTimeout(() => {\n        $('#productsTable').DataTable({\n          responsive: true\n        });\n      }, 500);\n    });\n    return {\n      products,\n      selectedProductLogs,\n      showLogs,\n      closeModal,\n      showModal,\n      printLogs,\n      downloadCSV\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","setup","products","selectedProductLogs","showModal","fetchProducts","response","get","withCredentials","value","data","error","console","showLogs","productId","logs","filter","product","id","map","log","log_id","previous_quantity","quantity_changed","new_quantity","reason","created_at","setTimeout","$","DataTable","responsive","closeModal","printLogs","printWindow","window","open","document","write","querySelector","outerHTML","close","print","downloadCSV","length","alert","headers","rows","Date","toLocaleString","csvContent","join","forEach","row","encodedUri","encodeURI","link","createElement","setAttribute","body","appendChild","click","removeChild"],"sources":["C:\\laragon\\www\\Abas-Adeva-Final-project-Appdevvv\\project_appdev\\Frontend\\src\\views\\product-logs.vue"],"sourcesContent":["<template>\r\n    <div class=\"d-flex\">\r\n      <!-- Sidebar -->\r\n      <nav class=\"sidebar bg-dark text-white vh-100 p-3\">\r\n        <h4 class=\"text-white mb-4\">Admin Dashboard</h4>\r\n        <ul class=\"nav nav-pills flex-column\">\r\n          <li class=\"nav-item\">\r\n            <router-link to=\"/admin/dashboard\" class=\"nav-link text-white\" active-class=\"active\">\r\n              <i class=\"fas fa-home me-2\"></i> Dashboard\r\n            </router-link>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <router-link to=\"/admin/products\" class=\"nav-link text-white\" active-class=\"active\">\r\n              <i class=\"fas fa-box me-2\"></i> Products\r\n            </router-link>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <router-link to=\"/admin/product-logs\" class=\"nav-link text-white\" active-class=\"active\">\r\n              <i class=\"fas fa-clipboard-list me-2\"></i> Product Logs\r\n            </router-link>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <router-link to=\"/admin/orders\" class=\"nav-link text-white\" active-class=\"active\">\r\n              <i class=\"fas fa-truck me-2\"></i> Orders\r\n            </router-link>\r\n          </li>\r\n          <li class=\"nav-item mt-auto\">\r\n            <button @click=\"handleLogout\" class=\"btn btn-danger w-100 mt-3\">\r\n              <i class=\"fas fa-sign-out-alt me-2\"></i> Logout\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n  \r\n      <!-- Main Content -->\r\n      <div class=\"flex-grow-1 p-4 main-content\">\r\n        <div class=\"container\">\r\n          <h2>Products and Logs</h2>\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h5 class=\"card-title mb-0\">Products</h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <!-- DataTable for Products -->\r\n              <table id=\"productsTable\" class=\"table table-bordered table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th class=\"text-center\">ID</th>\r\n                    <th class=\"text-center\">Name</th>\r\n                    <th class=\"text-center\">Stock</th>\r\n                    <th class=\"text-center\">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr v-for=\"product in products\" :key=\"product.id\">\r\n                    <td>{{ product.id }}</td>\r\n                    <td>{{ product.name }}</td>\r\n                    <td>{{ product.stock }}</td>\r\n                    <td>\r\n                      <button class=\"btn btn-info\" @click=\"showLogs(product.id)\">View Logs</button>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Modal for Product Logs -->\r\n      <div v-if=\"showModal\" class=\"modal fade show\" tabindex=\"-1\" style=\"display: block; background: rgba(0, 0, 0, 0.5)\">\r\n        <div class=\"modal-dialog modal-lg\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">Product Logs</h5>\r\n              <button type=\"button\" class=\"btn-close\" @click=\"closeModal\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <div class=\"mb-3\">\r\n                <button class=\"btn btn-primary\" @click=\"printLogs\">Print</button>\r\n                <button class=\"btn btn-success ms-2\" @click=\"downloadCSV\">Download CSV</button>\r\n              </div>\r\n              <table id=\"logsTable\" class=\"table table-bordered table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Previous Quantity</th>\r\n                    <th>Quantity Changed</th>\r\n                    <th>New Quantity</th>\r\n                    <th>Reason</th>\r\n                    <th>Created At</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr v-for=\"log in selectedProductLogs\" :key=\"log.log_id\">\r\n                    <td>{{ log.log_id }}</td>\r\n                    <td>{{ log.previous_quantity }}</td>\r\n                    <td>{{ log.quantity_changed }}</td>\r\n                    <td>{{ log.new_quantity }}</td>\r\n                    <td>{{ log.reason }}</td>\r\n                    <td>{{ new Date(log.created_at).toLocaleString() }}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref, onMounted } from 'vue';\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    setup() {\r\n      const products = ref([]);\r\n      const selectedProductLogs = ref([]);\r\n      const showModal = ref(false);\r\n  \r\n      // Fetch products with logs from the server\r\n      const fetchProducts = async () => {\r\n        try {\r\n          const response = await axios.get('http://localhost:5555/products-with-logs', { withCredentials: true });\r\n          products.value = response.data.products || [];\r\n        } catch (error) {\r\n          console.error('Error loading products', error);\r\n        }\r\n      };\r\n  \r\n      const showLogs = async (productId) => {\r\n        try {\r\n          const logs = products.value.filter(product => product.id === productId);\r\n          selectedProductLogs.value = logs.map(log => ({\r\n            log_id: log.log_id,\r\n            previous_quantity: log.previous_quantity,\r\n            quantity_changed: log.quantity_changed,\r\n            new_quantity: log.new_quantity,\r\n            reason: log.reason,\r\n            created_at: log.created_at\r\n          }));\r\n          showModal.value = true;\r\n          // Initialize DataTables for the modal\r\n          setTimeout(() => {\r\n            $('#logsTable').DataTable({\r\n              responsive: true\r\n            });\r\n          }, 500);\r\n        } catch (error) {\r\n          console.error('Error loading logs for product', error);\r\n        }\r\n      };\r\n  \r\n      const closeModal = () => {\r\n        showModal.value = false;\r\n        selectedProductLogs.value = [];\r\n      };\r\n  \r\n      // Function to print logs\r\n      const printLogs = () => {\r\n        const printWindow = window.open('', '_blank');\r\n        printWindow.document.write('<html><head><title>Print Logs</title></head><body>');\r\n        printWindow.document.write(document.querySelector('#logsTable').outerHTML);\r\n        printWindow.document.write('</body></html>');\r\n        printWindow.document.close();\r\n        printWindow.print();\r\n      };\r\n  \r\n      // Function to download logs as CSV\r\n      const downloadCSV = () => {\r\n        if (selectedProductLogs.value.length === 0) {\r\n          alert('No logs available to download.');\r\n          return;\r\n        }\r\n        const headers = ['ID', 'Previous Quantity', 'Quantity Changed', 'New Quantity', 'Reason', 'Created At'];\r\n        const rows = selectedProductLogs.value.map(log => [\r\n          log.log_id,\r\n          log.previous_quantity,\r\n          log.quantity_changed,\r\n          log.new_quantity,\r\n          log.reason,\r\n          new Date(log.created_at).toLocaleString()\r\n        ]);\r\n  \r\n        let csvContent = 'data:text/csv;charset=utf-8,' + headers.join(',') + '\\n';\r\n        rows.forEach(row => {\r\n          csvContent += row.join(',') + '\\n';\r\n        });\r\n  \r\n        const encodedUri = encodeURI(csvContent);\r\n        const link = document.createElement('a');\r\n        link.setAttribute('href', encodedUri);\r\n        link.setAttribute('download', 'product_logs.csv');\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      };\r\n  \r\n      onMounted(() => {\r\n        fetchProducts();\r\n        // Initialize DataTables for the main table\r\n        setTimeout(() => {\r\n          $('#productsTable').DataTable({\r\n            responsive: true\r\n          });\r\n        }, 500);\r\n      });\r\n  \r\n      return {\r\n        products,\r\n        selectedProductLogs,\r\n        showLogs,\r\n        closeModal,\r\n        showModal,\r\n        printLogs,\r\n        downloadCSV\r\n      };\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}